{"ast":null,"code":"import { defineComponent, ref } from \"vue\";\nimport axios from \"axios\";\nexport default defineComponent({\n  name: \"SplitView\",\n  setup() {\n    const sqlQuery = ref('');\n    const searchId = ref('');\n    const sqlQueryResult = ref(null); // 存储 SQL 查询结果\n    const idSearchResult = ref(null); // 存储 ID 查询结果\n\n    const executeSqlQuery = async () => {\n      if (sqlQuery.value.trim() === '') {\n        alert('请输入 SQL 查询语句。');\n        return;\n      }\n      try {\n        const response = await axios.post('/api/executeSql', {\n          sql: sqlQuery.value\n        });\n        sqlQueryResult.value = response.data; // 假设后端返回的数据在 response.data 中\n      } catch (error) {\n        console.error('SQL 查询错误:', error);\n        sqlQueryResult.value = '查询出错，请检查 SQL 语句和网络连接。';\n      }\n    };\n    const searchById = async () => {\n      if (searchId.value.trim() === '') {\n        alert('请输入 ID。');\n        return;\n      }\n      try {\n        const response = await axios.get(`/searchById?article_id=${encodeURIComponent(searchId.value)}`);\n        idSearchResult.value = response.data; // 假设后端返回的数据在 response.data 中\n      } catch (error) {\n        console.error('ID 查询错误:', error);\n        idSearchResult.value = '查询出错，请检查 ID 和网络连接。';\n      }\n    };\n    return {\n      sqlQuery,\n      searchId,\n      sqlQueryResult,\n      idSearchResult,\n      executeSqlQuery,\n      searchById\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","axios","name","setup","sqlQuery","searchId","sqlQueryResult","idSearchResult","executeSqlQuery","value","trim","alert","response","post","sql","data","error","console","searchById","get","encodeURIComponent"],"sources":["C:\\Users\\axu\\OneDrive - Intel Corporation\\Desktop\\Web serve\\webserve-0320\\webserve\\front\\src\\components\\LabTools\\Sensor\\HSD_API.vue"],"sourcesContent":["<template>\r\n  <el-container style=\"height: 100vh;\">\r\n    <!-- 左侧部分：根据 SQL 语句查询 -->\r\n    <el-aside style=\"width: 50%; padding: 20px; overflow-y: auto;\">\r\n      <el-form label-position=\"top\">\r\n        <el-form-item label=\"SQL 查询\">\r\n          <el-row :gutter=\"22\">\r\n            <el-col :span=\"22\">\r\n              <el-input\r\n                type=\"textarea\"\r\n                v-model=\"sqlQuery\"\r\n                placeholder=\"请输入 SQL 语句\"\r\n                :autosize=\"{ minRows: 3, maxRows: 6 }\"\r\n              ></el-input>\r\n            </el-col>\r\n            <el-col :span=\"2\">\r\n              <el-button type=\"primary\" @click=\"executeSqlQuery\">查询</el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <!-- SQL 查询结果展示区域 -->\r\n        <div v-if=\"sqlQueryResult\" class=\"query-result\">\r\n          <h3>SQL 查询结果:</h3>\r\n          <pre>{{ sqlQueryResult }}</pre>\r\n        </div>\r\n      </el-form>\r\n    </el-aside>\r\n\r\n    <el-divider direction=\"vertical\"></el-divider>\r\n\r\n    <!-- 右侧部分：根据 ID 查询 -->\r\n    <el-aside style=\"width: 50%; padding: 20px; overflow-y: auto;\">\r\n      <el-form label-position=\"top\">\r\n        <el-form-item label=\"ID 查询\">\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"21\">\r\n              <el-input\r\n                v-model=\"searchId\"\r\n                placeholder=\"请输入 ID\"\r\n              ></el-input>\r\n            </el-col>\r\n            <el-col :span=\"3\">\r\n              <el-button type=\"primary\" @click=\"searchById\">查询</el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <!-- ID 查询结果展示区域 -->\r\n        <div v-if=\"idSearchResult\" class=\"query-result\">\r\n          <h3>ID 查询结果:</h3>\r\n          <pre>{{ idSearchResult }}</pre>\r\n        </div>\r\n      </el-form>\r\n    </el-aside>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default defineComponent({\r\n  name: \"SplitView\",\r\n  setup() {\r\n    const sqlQuery = ref('');\r\n    const searchId = ref('');\r\n    const sqlQueryResult = ref(null); // 存储 SQL 查询结果\r\n    const idSearchResult = ref(null); // 存储 ID 查询结果\r\n\r\n    const executeSqlQuery = async () => {\r\n      if (sqlQuery.value.trim() === '') {\r\n        alert('请输入 SQL 查询语句。');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.post('/api/executeSql', { sql: sqlQuery.value });\r\n        sqlQueryResult.value = response.data; // 假设后端返回的数据在 response.data 中\r\n      } catch (error) {\r\n        console.error('SQL 查询错误:', error);\r\n        sqlQueryResult.value = '查询出错，请检查 SQL 语句和网络连接。';\r\n      }\r\n    };\r\n\r\n    const searchById = async () => {\r\n      if (searchId.value.trim() === '') {\r\n        alert('请输入 ID。');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get(`/searchById?article_id=${encodeURIComponent(searchId.value)}`);\r\n        idSearchResult.value = response.data; // 假设后端返回的数据在 response.data 中\r\n      } catch (error) {\r\n        console.error('ID 查询错误:', error);\r\n        idSearchResult.value = '查询出错，请检查 ID 和网络连接。';\r\n      }\r\n    };\r\n\r\n    return {\r\n      sqlQuery,\r\n      searchId,\r\n      sqlQueryResult,\r\n      idSearchResult,\r\n      executeSqlQuery,\r\n      searchById\r\n    };\r\n  }\r\n});\r\n</script>\r\n<style scoped>\r\n.el-aside {\r\n  padding: 20px;\r\n  border: 1px solid #ebeef5;\r\n  height: calc(100vh - 40px); /* 调整高度以适应视口 */\r\n  overflow-y: auto; /* 如果内容过多，允许滚动 */\r\n}\r\n</style>\r\n"],"mappings":"AAyDA,SAASA,eAAe,EAAEC,GAAE,QAAS,KAAK;AAC1C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAeF,eAAe,CAAC;EAC7BG,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,cAAa,GAAIN,GAAG,CAAC,IAAI,CAAC,EAAE;IAClC,MAAMO,cAAa,GAAIP,GAAG,CAAC,IAAI,CAAC,EAAE;;IAElC,MAAMQ,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAIJ,QAAQ,CAACK,KAAK,CAACC,IAAI,CAAC,MAAM,EAAE,EAAE;QAChCC,KAAK,CAAC,eAAe,CAAC;QACtB;MACF;MACA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,iBAAiB,EAAE;UAAEC,GAAG,EAAEV,QAAQ,CAACK;QAAM,CAAC,CAAC;QAC7EH,cAAc,CAACG,KAAI,GAAIG,QAAQ,CAACG,IAAI,EAAE;MACxC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCV,cAAc,CAACG,KAAI,GAAI,uBAAuB;MAChD;IACF,CAAC;IAED,MAAMS,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAIb,QAAQ,CAACI,KAAK,CAACC,IAAI,CAAC,MAAM,EAAE,EAAE;QAChCC,KAAK,CAAC,SAAS,CAAC;QAChB;MACF;MACA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACkB,GAAG,CAAE,0BAAyBC,kBAAkB,CAACf,QAAQ,CAACI,KAAK,CAAE,EAAC,CAAC;QAChGF,cAAc,CAACE,KAAI,GAAIG,QAAQ,CAACG,IAAI,EAAE;MACxC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAChCT,cAAc,CAACE,KAAI,GAAI,oBAAoB;MAC7C;IACF,CAAC;IAED,OAAO;MACLL,QAAQ;MACRC,QAAQ;MACRC,cAAc;MACdC,cAAc;MACdC,eAAe;MACfU;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}