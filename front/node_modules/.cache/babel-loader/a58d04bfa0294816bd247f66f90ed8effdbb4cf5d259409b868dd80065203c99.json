{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Multiselect from 'vue-multiselect';\nimport configData from '@/assets/config.json';\nexport default {\n  components: {\n    Multiselect\n  },\n  data() {\n    const forms = {};\n    configData.forEach(tab => {\n      forms[tab.name] = {};\n      tab.formItems.forEach(item => {\n        forms[tab.name][item.model] = '';\n      });\n    });\n    return {\n      activeName: 'first',\n      // 默认激活第一个选项卡\n      configData,\n      // 从配置文件加载的选项卡配置\n      forms,\n      // 表单数据\n      selectedDomains: [],\n      // 多选下拉框选中的域\n      domains: [{\n        name: 'Networking'\n      }, {\n        name: 'QAT'\n      }, {\n        name: 'DLB'\n      }, {\n        name: 'DPDK'\n      }\n      // ... 更多选项 ...\n      ]\n    };\n  },\n  methods: {\n    handleClick(tab, event) {\n      // 处理标签点击事件\n    },\n    tableRowClassName({\n      row,\n      rowIndex\n    }) {\n      if (rowIndex === 0) {\n        return 'first-row';\n      }\n      return '';\n    },\n    search() {\n      // 在这里执行搜索逻辑\n      console.log('执行搜索', this.selection1, this.selection2, this.selection3, this.selection4);\n    },\n    navigateToOtherPage() {\n      // 在这里实现跳转逻辑\n      // 例如，使用 Vue Router 的 this.$router.push 方法\n      this.$router.push('/other-page');\n    }\n  }\n};","map":{"version":3,"names":["Multiselect","configData","components","data","forms","forEach","tab","name","formItems","item","model","activeName","selectedDomains","domains","methods","handleClick","event","tableRowClassName","row","rowIndex","search","console","log","selection1","selection2","selection3","selection4","navigateToOtherPage","$router","push"],"sources":["C:\\Users\\axu\\OneDrive - Intel Corporation\\Desktop\\Web serve\\webserve-0320\\webserve\\front\\src\\components\\LabTools\\Sensor\\JenkinsAPI-P.vue"],"sourcesContent":["<template>\r\n<div style=\"display: flex; width: 100%; justify-content: center;\">\r\n  <el-steps :active=\"1\" finish-status=\"success\" simple style=\"width: 60%; margin-top: 20px;\">\r\n    <el-step title=\"Test Case Overview\"></el-step>\r\n    <el-step title=\"Environment Configuration\"></el-step>\r\n    <el-step title=\"Aotumation Configuration\"></el-step>\r\n  </el-steps>\r\n</div>\r\n\r\n  <div class=\"search-form\">\r\n    <div class=\"row\">\r\n\r\n      <div class=\"input-group\">\r\n        <label for=\"select1\">Platform:</label>\r\n        <select id=\"select1\" v-model=\"selection1\">\r\n          <option value=\"option1\">SP1</option>\r\n          <option value=\"option2\">SP2</option>\r\n          <!-- 更多选项 -->\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"input-group\">\r\n        <label for=\"select2\">Test_Cycle_Name:</label>\r\n        <select id=\"select2\" v-model=\"selection2\">\r\n          <option value=\"option1\">Test_Cycle_1</option>\r\n          <option value=\"option2\">Test_Cycle_2</option>\r\n          <!-- 更多选项 -->\r\n        </select>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n\r\n      <div class=\"input-group\">\r\n        <label for=\"select3\">Cycle_Config:</label>\r\n        <select id=\"select3\" v-model=\"selection3\">\r\n          <option value=\"option1\">Cycle_Config_1</option>\r\n          <option value=\"option2\">Cycle_Config_2</option>\r\n          <!-- 更多选项 -->\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"input-group\">\r\n        <label for=\"select4\">Test_Domain:</label>\r\n        <multiselect\r\n          id=\"select4\"\r\n          v-model=\"selection4\"\r\n          :options=\"domains\"\r\n          :multiple=\"true\"\r\n          :taggable=\"true\"\r\n          :close-on-select=\"false\"\r\n          :clear-on-select=\"false\"\r\n          :preserve-search=\"true\"\r\n          placeholder=\"Pick some\"\r\n          label=\"name\"\r\n          track-by=\"name\"\r\n          :preselect-first=\"false\"\r\n        ></multiselect>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"row button-row\">\r\n      <button @click=\"search\">Search</button>\r\n    </div> -->\r\n\r\n  </div>\r\n\r\n  \r\n   <!-- 查询结果列表 -->\r\n  <div class=\"tabs-container\">\r\n    <el-tabs v-model=\"activeName\" type=\"card\" @tab-click=\"handleClick\">\r\n      <el-tab-pane\r\n        v-for=\"tab in combinedTabsConfig\"\r\n        :key=\"tab.name\"\r\n        :label=\"tab.label\"\r\n        :name=\"tab.name\"\r\n      >\r\n        <el-form label-position=\"top\">\r\n          <el-form-item\r\n            v-for=\"item in tab.formItems\"\r\n            :key=\"item.model\"\r\n            :label=\"item.label\"\r\n          >\r\n            <el-input\r\n              :type=\"item.type\"\r\n              v-model=\"forms[tab.name][item.model]\"\r\n            />\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div> \r\n\r\n  <!-- 跳转按钮 -->\r\n  <div class=\"button-container\">\r\n    <button @click=\"navigateToOtherPage\">Build</button>\r\n  </div>\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport Multiselect from 'vue-multiselect';\r\nimport configData from '@/assets/config.json';\r\n\r\n\r\nexport default {\r\n  components: {\r\n    Multiselect\r\n  },\r\n\r\n  data() {\r\n    const forms = {};\r\n    configData.forEach(tab => {\r\n      forms[tab.name] = {};\r\n      tab.formItems.forEach(item => {\r\n        forms[tab.name][item.model] = '';\r\n      });\r\n    });\r\n\r\n    return {\r\n      activeName: 'first', // 默认激活第一个选项卡\r\n      configData, // 从配置文件加载的选项卡配置\r\n      forms, // 表单数据\r\n      selectedDomains: [], // 多选下拉框选中的域\r\n      domains: [\r\n        { name: 'Networking' },\r\n        { name: 'QAT' },\r\n        { name: 'DLB' },\r\n        { name: 'DPDK' }\r\n        // ... 更多选项 ...\r\n      ],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    handleClick(tab, event) {\r\n      // 处理标签点击事件\r\n    },\r\n    tableRowClassName({ row, rowIndex}) {\r\n    if (rowIndex === 0) {\r\n      return 'first-row';\r\n    }\r\n    return '';\r\n  },\r\n    search() {\r\n      // 在这里执行搜索逻辑\r\n      console.log('执行搜索', this.selection1, this.selection2, this.selection3, this.selection4);\r\n    },\r\n    navigateToOtherPage() {\r\n      // 在这里实现跳转逻辑\r\n      // 例如，使用 Vue Router 的 this.$router.push 方法\r\n      this.$router.push('/other-page');\r\n    },\r\n  },\r\n  \r\n};\r\n</script>\r\n\r\n<style>\r\n.tabs-container {\r\n  width: 600px; /* 固定宽度 */\r\n  height: 300px; /* 高度根据内容自动调整 */\r\n  margin: 20px auto; /* 上下边距和自动左右边距 */\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\r\n  border-radius: 4px; /* 圆角边框 */\r\n  background-color: #c2c2c283; /* 设置背景颜色为浅灰色 */\r\n  padding: 20px; /* 内边距 */\r\n}\r\n/* 选中的选项卡样式 */\r\n.tabs-container .el-tabs__item.is-active {\r\n  background-color: #409EFF; /* 蓝色背景 */\r\n  color: white; /* 白色文字 */\r\n}\r\n\r\n/* 未选中的选项卡样式 */\r\n.tabs-container .el-tabs__item {\r\n  background-color: white; /* 白色背景 */\r\n  color: #606266; /* 文字颜色 */\r\n  border-color: #dcdfe6; /* 边框颜色 */\r\n}\r\n\r\n\r\n\r\n\r\n.el-form-item {\r\n  margin-bottom: 20px; /* 增加表单项之间的间距 */\r\n}\r\n\r\n.el-input {\r\n  width: 100%; /* 输入框宽度设置为100% */\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  justify-content: flex-end; /* 将按钮对齐到右边 */\r\n  margin-right: 85px; /* 右边距20px */\r\n}\r\n\r\n.button-container button {\r\n  margin-top: 1%;\r\n  padding: 10px 35px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.button-container button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n\r\n\r\n<style scoped>\r\n@import \"vue-multiselect/dist/vue-multiselect.css\";\r\n\r\n\r\n.search-form {\r\n  max-width: 90%;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 3px solid #f7f6f6;\r\n  border-radius: 10px;\r\n  background: #ffffff;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 10px;\r\n  width: calc(50% - 20px); /* 减去间距的一半 */\r\n \r\n}\r\n\r\n.input-group label {\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n\r\n}\r\n\r\n.input-group select,\r\n.multiselect {\r\n  padding: 8px;\r\n  border: 2px solid #e6e6e6;\r\n  border-radius: 4px;\r\n  width: 100%; /* 选择框宽度调整为100% */\r\n  font: 1.1em sans-serif;\r\n  \r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px; /* 增加按钮与上方元素的间距 */\r\n}\r\n\r\n.row button {\r\n  margin-top:1% ;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.row button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n\r\n\r\n</style>\r\n"],"mappings":";AAwGA,OAAOA,WAAU,MAAO,iBAAiB;AACzC,OAAOC,UAAS,MAAO,sBAAsB;AAG7C,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EAEDG,IAAIA,CAAA,EAAG;IACL,MAAMC,KAAI,GAAI,CAAC,CAAC;IAChBH,UAAU,CAACI,OAAO,CAACC,GAAE,IAAK;MACxBF,KAAK,CAACE,GAAG,CAACC,IAAI,IAAI,CAAC,CAAC;MACpBD,GAAG,CAACE,SAAS,CAACH,OAAO,CAACI,IAAG,IAAK;QAC5BL,KAAK,CAACE,GAAG,CAACC,IAAI,CAAC,CAACE,IAAI,CAACC,KAAK,IAAI,EAAE;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO;MACLC,UAAU,EAAE,OAAO;MAAE;MACrBV,UAAU;MAAE;MACZG,KAAK;MAAE;MACPQ,eAAe,EAAE,EAAE;MAAE;MACrBC,OAAO,EAAE,CACP;QAAEN,IAAI,EAAE;MAAa,CAAC,EACtB;QAAEA,IAAI,EAAE;MAAM,CAAC,EACf;QAAEA,IAAI,EAAE;MAAM,CAAC,EACf;QAAEA,IAAI,EAAE;MAAO;MACf;MAAA;IAEJ,CAAC;EACH,CAAC;EAEDO,OAAO,EAAE;IACPC,WAAWA,CAACT,GAAG,EAAEU,KAAK,EAAE;MACtB;IAAA,CACD;IACDC,iBAAiBA,CAAC;MAAEC,GAAG;MAAEC;IAAQ,CAAC,EAAE;MACpC,IAAIA,QAAO,KAAM,CAAC,EAAE;QAClB,OAAO,WAAW;MACpB;MACA,OAAO,EAAE;IACX,CAAC;IACCC,MAAMA,CAAA,EAAG;MACP;MACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,CAAC;IACzF,CAAC;IACDC,mBAAmBA,CAAA,EAAG;MACpB;MACA;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC;EACF;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}