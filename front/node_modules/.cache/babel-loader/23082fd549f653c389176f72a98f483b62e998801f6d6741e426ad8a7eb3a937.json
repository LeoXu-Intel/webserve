{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, reactive, ref, watch, onBeforeUnmount } from 'vue';\nimport { useStore } from 'vuex';\nimport configData from '@/assets/config.json';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const isBuilding = ref(false);\n    const store = useStore();\n    const buildLink = ref(null);\n    const pollingInterval = ref(null);\n    let loadingInstance = null;\n    // 监视 isBuilding 的变化\n\n    const checkBuildStatus = async () => {\n      try {\n        const response = await axios.get('/Building'); // 替换为实际的 API 路径\n        const {\n          building,\n          result\n        } = response.data;\n        isBuilding.value = building;\n        if (!building) {\n          // 如果构建完成，显示结果并停止轮询\n          console.log('Build result:', result);\n          clearInterval(pollingInterval.value);\n          pollingInterval.value = null;\n        }\n      } catch (error) {\n        console.error('Error fetching build status:', error);\n        clearInterval(pollingInterval.value);\n        pollingInterval.value = null;\n      }\n    };\n\n    // 开始轮询\n    const startPolling = () => {\n      isBuilding.value = true;\n      pollingInterval.value = setInterval(checkBuildStatus, 5000); // 每5秒检查一次\n    };\n\n    // 组件卸载前清除定时器\n    onBeforeUnmount(() => {\n      if (pollingInterval.value) {\n        clearInterval(pollingInterval.value);\n      }\n    });\n    watch(isBuilding, newVal => {\n      if (newVal && !loadingInstance) {\n        loadingInstance = ElLoading.service({\n          fullscreen: true,\n          text: 'Building in progress...',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n      } else if (!newVal && loadingInstance) {\n        loadingInstance.close();\n        loadingInstance = null;\n      }\n    });\n    // 使用 computed 来创建只读的计算属性，它们将从 Vuex store 中获取状态\n    const BuildENV = async () => {\n      isBuilding.value = true;\n      const payload = {\n        platform: selection1.value,\n        formData: forms\n      };\n      try {\n        const response = await axios.post('/BuildENV', payload);\n        console.log(response.data);\n        buildLink.value = response.data.build_url;\n      } catch (error) {\n        console.error(error);\n      } finally {\n        isBuilding.value = false; // 构建完成或出现错误，隐藏加载指示器\n      }\n    };\n    const selection1 = computed(() => store.state.selections.selection1);\n    const selection2 = computed(() => store.state.selections.selection2);\n    const selection3 = computed(() => store.state.selections.selection3);\n    const selection4 = computed(() => store.state.selections.selection4);\n    //const activeName = computed(() => store.state.activeTab); // 假设 activeTab 保存在 Vuex store 的状态中\n    const combinedTabsConfig = computed(() => {\n      // 如果 selection4 为空，则返回所有配置数据\n      if (selection4.value.length === 0) {\n        return configData;\n      }\n\n      // 返回默认配置\n      const defaultTabsConfig = configData.filter(tab => [\"SUT1\", \"SUT2\", \"VM\", \"BMC\", \"PDU\", \"Switch\"].includes(tab.label));\n\n      // 根据 selection4 的值过滤出其他配置\n      let otherTabsConfig = configData.filter(tab => selection4.value.includes(tab.label) && ![\"SUT1\", \"SUT2\", \"VM\", \"BMC\", \"PDU\", \"Switch\"].includes(tab.label));\n\n      // 如果 selection4 包含 'DSA' 或 'DLB'，则添加 'DSA/DLB' 配置\n      if (selection4.value.includes('DSA') || selection4.value.includes('DLB')) {\n        const dsaDlbConfig = configData.find(tab => tab.label === 'DSA/DLB');\n        if (dsaDlbConfig) {\n          otherTabsConfig.push(dsaDlbConfig);\n        }\n      }\n\n      // 如果 selection4 包含 'SGX' 或 'SST'，则添加 'SGX/SST' 配置\n      if (selection4.value.includes('SGX') || selection4.value.includes('SST')) {\n        const sgxSstConfig = configData.find(tab => tab.label === 'SGX/SST');\n        if (sgxSstConfig) {\n          otherTabsConfig.push(sgxSstConfig);\n        }\n      }\n\n      // 合并默认标签页和其他选中的标签页配置\n      return [...defaultTabsConfig, ...otherTabsConfig];\n    });\n    const forms = reactive({}); // 为每个tab和formItem创建响应式属性\n\n    // 初始化forms对象\n    configData.forEach(tab => {\n      forms[tab.label] = {};\n      tab.formItems.forEach(item => {\n        forms[tab.label][item.model] = item.defaultValue || '';\n      });\n    });\n\n    // 定义build方法\n    const Next = () => {\n      // 这里应该是你的构建逻辑\n      console.log('Build function called');\n      this.$router.push('/Execution/Aotu_Config');\n    };\n    onBeforeUnmount(() => {\n      if (loadingInstance) {\n        loadingInstance.close();\n      }\n    });\n\n    // 返回响应式引用和函数...\n    return {\n      selection1,\n      selection2,\n      selection3,\n      selection4,\n      activeName,\n      combinedTabsConfig,\n      forms,\n      Next,\n      buildLink,\n      // 用于存储构建链接\n      BuildENV,\n      isBuilding,\n      startPolling\n    };\n  },\n  data() {\n    return {\n      isBuilding: false,\n      pollingInterval: null\n    };\n  },\n  methods: {\n    Next() {\n      this.$router.push('/Execution/Aotu_Config');\n    },\n    Back() {\n      this.$router.push('/Execution/Test_Case_Overview');\n    }\n  },\n  state: {\n    // ... 其他状态\n    activeTab: 'SUT1' // 设置默认激活的选项卡为\"SUT1\"\n    // ... 其他状态\n  }\n};","map":{"version":3,"names":["computed","reactive","ref","watch","onBeforeUnmount","useStore","configData","axios","setup","isBuilding","store","buildLink","pollingInterval","loadingInstance","checkBuildStatus","response","get","building","result","data","value","console","log","clearInterval","error","startPolling","setInterval","newVal","ElLoading","service","fullscreen","text","spinner","background","close","BuildENV","payload","platform","selection1","formData","forms","post","build_url","state","selections","selection2","selection3","selection4","combinedTabsConfig","length","defaultTabsConfig","filter","tab","includes","label","otherTabsConfig","dsaDlbConfig","find","push","sgxSstConfig","forEach","formItems","item","model","defaultValue","Next","$router","activeName","methods","Back","activeTab"],"sources":["/root/webserve/AI-Web/ai-web/front/src/components/Execution/Env_Config.vue"],"sourcesContent":["<template>\n    <!-- 全屏加载遮罩，当 isBuilding 为 true 时显示 -->\n    <el-loading\n      :fullscreen=\"true\"\n      lock\n      text=\"Building in progress...\"\n      spinner=\"el-icon-loading\"\n      background=\"rgba(0, 0, 0, 0.7)\"\n      v-if=\"isBuilding\"\n    ></el-loading>\n    <div v-if=\"isBuilding\" class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <el-spinner></el-spinner>\n      <p>Building in progress...</p>\n      <p v-if=\"buildLink\">View the build progress <a :href=\"buildLink\" target=\"_blank\">here</a>.</p>\n    </div>\n  </div>\n  <div style=\"display: flex; width: 100%; justify-content: center;\">\n    <el-steps :active=\"1\" finish-status=\"success\" simple style=\"width: 70%; margin-top: 5px;\">\n      <el-step title=\"Test Case Overview\"></el-step>\n      <el-step title=\"Environment Configuration\"></el-step>\n      <el-step title=\"Automation Configuration\"></el-step>\n    </el-steps>\n  </div>\n  \n  <div class=\"search-form\">\n    <div class=\"row\">\n      <div class=\"input-group\">\n        <label for=\"selection1\">Platform:</label>\n        <input id=\"selection1\" :value=\"selection1\" readonly>\n      </div>\n  \n      <div class=\"input-group\">\n        <label for=\"selection2\">Test_Cycle_Name:</label>\n        <el-tooltip class=\"item\" effect=\"dark\" :content=\"selection2\" placement=\"bottom\">\n          <input id=\"selection2\" :value=\"selection2\" readonly>\n        </el-tooltip>\n      </div>\n  \n      <div class=\"input-group\">\n        <label for=\"selection3\">Cycle_Config:</label>\n        <el-tooltip class=\"item\" effect=\"dark\" :content=\"selection3\" placement=\"bottom\">\n          <input id=\"selection3\" :value=\"selection3\" readonly>\n        </el-tooltip>\n      </div>\n  \n      <div class=\"input-group\">\n        <label for=\"selection4\">Test_Domain:</label>\n        <el-select v-model=\"selection4\" multiple placeholder=\"请选择\" disabled>\n          <el-option\n            v-for=\"item in options\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"tabs-container\">\n    <el-tabs v-model=\"activeName\" type=\"card\">\n      <el-tab-pane\n        v-for=\"tab in combinedTabsConfig\"\n        :key=\"tab.label\"\n        :label=\"tab.label\"\n        :name=\"tab.label\"\n      >\n        <el-form label-position=\"top\">\n          <el-form-item\n            v-for=\"item in tab.formItems\"\n            :key=\"item.model\"\n            :label=\"item.label\"\n          >\n            <el-input\n              v-if=\"item.type === 'text'\"\n              :type=\"item.type\"\n              v-model=\"forms[tab.label][item.model]\"\n            />\n            <el-select\n              v-else-if=\"item.type === 'select'\"\n              v-model=\"forms[tab.label][item.model]\"\n              placeholder=\"请选择\"\n            >\n              <el-option\n                v-for=\"option in item.options\"\n                :key=\"option.value\"\n                :label=\"option.label\"\n                :value=\"option.value\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n  \n  <div v-if=\"buildLink\" class=\"build-link-container\">\n    <a :href=\"buildLink\" target=\"_blank\">View Build</a>\n  </div>\n\n  <div class=\"buttons-container\" style=\"display: flex; justify-content: flex-start; align-items: flex-end; position: absolute; bottom: 70; right: 0; margin: 0px;\">\n  <div class=\"button-container\">\n    <button @click=\"Back\">Back</button>\n  </div>\n  <div class=\"button-container\">\n    <el-button type=\"primary\" @click=\"BuildENV\" :loading=\"isBuilding\">Build</el-button>\n  </div>\n  <div class=\"button-container\">\n    <button @click=\"Next\">Next</button>\n  </div>\n  \n</div>\n  </template>\n  \n  \n  <script>\n  \n  import { computed, reactive, ref, watch, onBeforeUnmount } from 'vue';\nimport { useStore } from 'vuex';\nimport configData from '@/assets/config.json';\nimport axios from 'axios';\n  \n  \n  export default {\n    \n    setup() {\n      const isBuilding = ref(false);\n      const store = useStore();\n      const buildLink = ref(null);\n      const pollingInterval = ref(null);\n      let loadingInstance = null;\n       // 监视 isBuilding 的变化\n\n       const checkBuildStatus = async () => {\n      try {\n        const response = await axios.get('/Building'); // 替换为实际的 API 路径\n        const { building, result } = response.data;\n        isBuilding.value = building;\n\n        if (!building) {\n          // 如果构建完成，显示结果并停止轮询\n          console.log('Build result:', result);\n          clearInterval(pollingInterval.value);\n          pollingInterval.value = null;\n        }\n      } catch (error) {\n        console.error('Error fetching build status:', error);\n        clearInterval(pollingInterval.value);\n        pollingInterval.value = null;\n      }\n    };\n\n    // 开始轮询\n    const startPolling = () => {\n      isBuilding.value = true;\n      pollingInterval.value = setInterval(checkBuildStatus, 5000); // 每5秒检查一次\n    };\n\n    // 组件卸载前清除定时器\n    onBeforeUnmount(() => {\n      if (pollingInterval.value) {\n        clearInterval(pollingInterval.value);\n      }\n    });\n\n    watch(isBuilding, (newVal) => {\n      if (newVal && !loadingInstance) {\n        loadingInstance = ElLoading.service({\n          fullscreen: true,\n          text: 'Building in progress...',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)',\n        });\n      } else if (!newVal && loadingInstance) {\n        loadingInstance.close();\n        loadingInstance = null;\n      }\n    });\n      // 使用 computed 来创建只读的计算属性，它们将从 Vuex store 中获取状态\n      const BuildENV = async () => {\n        isBuilding.value = true;\n        const payload = {\n          platform: selection1.value,\n          formData: forms,\n        };\n        try {\n          const response = await axios.post('/BuildENV', payload);\n          console.log(response.data);\n          buildLink.value = response.data.build_url;\n        } catch (error) {\n          console.error(error);\n        }finally {\n          isBuilding.value = false; // 构建完成或出现错误，隐藏加载指示器\n        }\n      };\n\n      \n      const selection1 = computed(() => store.state.selections.selection1);\n      const selection2 = computed(() => store.state.selections.selection2);\n      const selection3 = computed(() => store.state.selections.selection3);\n      const selection4 = computed(() => store.state.selections.selection4);\n      //const activeName = computed(() => store.state.activeTab); // 假设 activeTab 保存在 Vuex store 的状态中\n      const combinedTabsConfig = computed(() => {\n        // 如果 selection4 为空，则返回所有配置数据\n        if (selection4.value.length === 0) {\n          return configData;\n        }\n\n        // 返回默认配置\n        const defaultTabsConfig = configData.filter(tab => [\"SUT1\", \"SUT2\", \"VM\",\"BMC\",\"PDU\",\"Switch\"].includes(tab.label));\n\n        // 根据 selection4 的值过滤出其他配置\n        let otherTabsConfig = configData.filter(tab => selection4.value.includes(tab.label) && ![\"SUT1\", \"SUT2\", \"VM\",\"BMC\",\"PDU\",\"Switch\"].includes(tab.label));\n\n        // 如果 selection4 包含 'DSA' 或 'DLB'，则添加 'DSA/DLB' 配置\n        if (selection4.value.includes('DSA') || selection4.value.includes('DLB')) {\n          const dsaDlbConfig = configData.find(tab => tab.label === 'DSA/DLB');\n          if (dsaDlbConfig) {\n            otherTabsConfig.push(dsaDlbConfig);\n          }\n        }\n\n        // 如果 selection4 包含 'SGX' 或 'SST'，则添加 'SGX/SST' 配置\n        if (selection4.value.includes('SGX') || selection4.value.includes('SST')) {\n          const sgxSstConfig = configData.find(tab => tab.label === 'SGX/SST');\n          if (sgxSstConfig) {\n            otherTabsConfig.push(sgxSstConfig);\n          }\n        }\n\n        // 合并默认标签页和其他选中的标签页配置\n        return [...defaultTabsConfig, ...otherTabsConfig];\n      });\n\n\n      const forms = reactive({}); // 为每个tab和formItem创建响应式属性\n  \n      // 初始化forms对象\n      configData.forEach((tab) => {\n        forms[tab.label] = {};\n        tab.formItems.forEach((item) => {\n          forms[tab.label][item.model] = item.defaultValue || '';\n        });\n      });\n  \n      // 定义build方法\n      const Next = () => {\n        // 这里应该是你的构建逻辑\n        console.log('Build function called');\n        this.$router.push('/Execution/Aotu_Config');\n      };\n      \n      onBeforeUnmount(() => {\n      if (loadingInstance) {\n        loadingInstance.close();\n      }\n    });\n  \n  \n      // 返回响应式引用和函数...\n      return {\n        selection1,\n        selection2,\n        selection3,\n        selection4,\n        activeName,\n        combinedTabsConfig,\n        forms,\n        Next,\n        buildLink, // 用于存储构建链接\n        BuildENV,\n        isBuilding,\n        startPolling,\n      };\n    },\n    data() {\n    return {\n      isBuilding: false,\n      pollingInterval: null,\n    };\n  },\n    methods: {\n      \n      Next() {\n        this.$router.push('/Execution/Aotu_Config');\n      },\n      Back() {\n        this.$router.push('/Execution/Test_Case_Overview');\n    },\n    },\n    state: {\n  // ... 其他状态\n  activeTab: 'SUT1', // 设置默认激活的选项卡为\"SUT1\"\n  // ... 其他状态\n}\n  };\n  \n  \n  </script>\n  \n  \n  <style>\n\n.build-link-container {\n  display: flex;\n  justify-content: flex-end; /* 将按钮对齐到右边 */\n  margin-right: 280px; /* 右边距20px */\n  bottom: 10px;\n  right: 10px;\n}\n\n\n\n.build-link-container a {\n  color: #409EFF; /* 设置链接颜色 */\n  text-decoration: none; /* 去掉下划线 */\n}\n\n.build-link-container a:hover {\n  text-decoration: underline; /* 鼠标悬停时添加下划线 */\n}\n\n\n\n  .buttons-container {\n  display: flex;\n  justify-content: space-between; /* 或者其他你想要的对齐方式 */\n}\n  .tabs-container {\n    max-width: 900px; /* 最大宽度，宽度可以根据内容自动调整 */\n    min-height: 400px; /* 最小高度，高度可以根据内容自动调整 */\n    margin: 20px auto; /* 上下边距和自动左右边距 */\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\n    border-radius: 4px; /* 圆角边框 */\n    border-color: #000000;\n    background-color: #00000010; /* 设置背景颜色为浅灰色 */\n    padding: 20px; /* 内边距 */\n    font-size: 1em; /* 字体大小 */\n    font-family: sans-serif; /* 字体家族 */\n    color: #000000; /* 字体颜色设置为黑色 */\n    font-weight: bold; /* 字体加粗 */\n    \n  }\n  \n  /* 选中的选项卡样式 */\n  .tabs-container .el-tabs__item.is-active {\n    background-color: #409EFF; /* 蓝色背景 */\n    color: white; /* 白色文字 */\n    font-family: sans-serif; /* 字体家族 */\n    color: #000000; /* 字体颜色设置为黑色 */\n    font-weight: bold; /* 字体加粗 */\n  }\n  \n  /* 未选中的选项卡样式 */\n  .tabs-container .el-tabs__item {\n    background-color: white; /* 白色背景 */\n    color: #606266; /* 文字颜色 */\n    border-color: #dcdfe6; /* 边框颜色 */\n    font-family: sans-serif; /* 字体家族 */\n    color: #000000; /* 字体颜色设置为黑色 */\n    font-weight: bold; /* 字体加粗 */\n  }\n  \n  .el-form-item {\n    margin-bottom: 20px; /* 增加表单项之间的间距 */\n    \n  }\n  \n  .el-input {\n    width: 100%; /* 输入框宽度设置为100% */\n    \n  }\n  \n  .button-container {\n    display: flex;\n    justify-content: flex-end; /* 将按钮对齐到右边 */\n    margin-right: 85px; /* 右边距20px */\n  }\n  \n  .button-container button {\n    margin-top: 1%;\n    padding: 10px 35px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n    font-weight: bold;\n    transition: background-color 0.3s ease;\n  }\n  \n  .button-container button:hover {\n    background-color: #0056b3;\n  }\n  </style>\n  \n  \n  <style scoped>\n  \n  .search-form {\n    max-width: 90%;\n    margin: 10px auto;\n    padding: 10px;\n    border: 3px solid #f7f6f6;\n    border-radius: 10px;\n    background: #ffffff;\n    \n  }\n  \n  .row {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 5px;\n  }\n  \n  .input-group {\n    display: flex;\n    flex-direction: column;\n    margin: 0 20px;\n    width: calc(50% - 20px); /* 减去间距的一半 */\n    \n  }\n  \n  .input-group label {\n    margin-bottom: 10px;\n    font-weight: bold;\n  \n  }\n  \n  .input-group input{\n    padding: 0px;\n    border: 2px solid #e6e6e6;\n    border-radius: 4px;\n    width: 100%; /* 选择框宽度调整为100% */\n    font: 1em sans-serif;\n    height: 33px;\n    background: #c9c8c8;\n    \n  }\n  \n  .button-row {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 20px; /* 增加按钮与上方元素的间距 */\n  }\n  \n  .row button {\n    margin-top:1% ;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n    font-weight: bold;\n    transition: background-color 0.3s ease;\n  }\n  \n  .row button:hover {\n    background-color: #0056b3;\n  }\n  \n  \n  \n  </style>\n  \n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}