{"ast":null,"code":"import { computed, ref } from 'vue'; // 确保 ref 被导入\nimport { useStore } from 'vuex';\nexport default {\n  setup() {\n    const store = useStore();\n\n    // 使用 computed 来创建只读的计算属性，它们将从 Vuex store 中获取状态\n    const selection1 = computed(() => store.state.selections.selection1);\n    const selection2 = computed(() => store.state.selections.selection2);\n    const selection3 = computed(() => store.state.selections.selection3);\n    const selection4 = computed(() => store.state.selections.selection4);\n\n    // 假设你有一个 action 来加载数据\n    store.dispatch('loadSelections');\n\n    // 搜索文本的响应式引用\n    const searchText1 = ref('');\n    const searchText2 = ref('');\n    const options1 = ref({\n      label: 'Suit_Marker_Mapping_1',\n      value: 'Suit_Marker_Mapping_1'\n    }, {\n      label: 'Suit_Marker_Mapping_2',\n      value: 'Suit_Marker_Mapping_2'\n    }, {\n      label: 'Suit_Marker_Mapping_3',\n      value: 'Suit_Marker_Mapping_3'\n    }, {\n      label: 'Suit_Marker_Mapping_4',\n      value: 'Suit_Marker_Mapping_4'\n    }, {\n      label: 'Suit_Marker_Mapping_5',\n      value: 'Suit_Marker_Mapping_5'\n    }, {\n      label: 'Suit_Marker_Mapping_6',\n      value: 'Suit_Marker_Mapping_6'\n    }, {\n      label: 'Suit_Marker_Mapping_7',\n      value: 'Suit_Marker_Mapping_7'\n    }, {\n      label: 'Suit_Marker_Mapping_8',\n      value: 'Suit_Marker_Mapping_8'\n    }, {\n      label: 'Suit_Marker_Mapping_9',\n      value: 'Suit_Marker_Mapping_9'\n    }, {\n      label: 'Suit_Marker_Mapping_10',\n      value: 'Suit_Marker_Mapping_10'\n    }, {\n      label: 'Suit_Marker_Mapping_11',\n      value: 'Suit_Marker_Mapping_11'\n    }\n\n    // ...更多选项\n    );\n    const options2 = ref({\n      label: 'Case_Marker_1',\n      value: 'Case_Marker_1'\n    }, {\n      label: 'Case_Marker_2',\n      value: 'Case_Marker_2'\n    }, {\n      label: 'Case_Marker_3',\n      value: 'Case_Marker_3'\n    }, {\n      label: 'Case_Marker_4',\n      value: 'Case_Marker_4'\n    }, {\n      label: 'Case_Marker_5',\n      value: 'Case_Marker_5'\n    }, {\n      label: 'Case_Marker_6',\n      value: 'Case_Marker_6'\n    }, {\n      label: 'Case_Marker_7',\n      value: 'Case_Marker_7'\n    }, {\n      label: 'Case_Marker_8',\n      value: 'Case_Marker_8'\n    }, {\n      label: 'Case_Marker_9',\n      value: 'Case_Marker_9'\n    }, {\n      label: 'Case_Marker_10',\n      value: 'Case_Marker_10'\n    }, {\n      label: 'Case_Marker_11',\n      value: 'Case_Marker_11'\n    }\n\n    // ...更多选项\n    );\n\n    // 计算属性，用于根据搜索文本过滤选项\n    const filteredOptions1 = computed(() => {\n      if (!searchText1.value) {\n        return this.options1;\n      }\n      return this.options1.filter(item => item.label.toLowerCase().includes(searchText1.value.toLowerCase()));\n    });\n    const filteredOptions2 = computed(() => {\n      if (!searchText2.value) {\n        return this.options2;\n      }\n      return this.options2.filter(item => item.label.toLowerCase().includes(searchText2.value.toLowerCase()));\n    });\n    return {\n      // ...其他返回值...\n      selection1,\n      selection2,\n      selection3,\n      selection4,\n      searchText1,\n      searchText2,\n      filteredOptions1,\n      filteredOptions2\n    };\n  },\n  created() {\n    // 在组件创建后设置默认选中的值\n    this.checkedGroup1 = this.options1.map(item => item.value);\n    this.checkedGroup2 = this.options2.map(item => item.value);\n  },\n  methods: {\n    search() {\n      // 在这里执行搜索逻辑\n      console.log('执行搜索', this.selection1, this.selection2, this.selection3, this.selection4);\n    }\n  },\n  filterOptions1() {\n    // 这个方法会在 searchText1 改变时被调用\n    // 过滤 options1 数组并更新 filteredOptions1\n    this.filteredOptions1 = this.options1.filter(item => item.label.toLowerCase().includes(this.searchText1.toLowerCase()));\n  },\n  filterOptions2() {\n    // 这个方法会在 searchText2 改变时被调用\n    // 过滤 options2 数组并更新 filteredOptions2\n    this.filteredOptions2 = this.options2.filter(item => item.label.toLowerCase().includes(this.searchText2.toLowerCase()));\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","setup","store","selection1","state","selections","selection2","selection3","selection4","dispatch","searchText1","searchText2","options1","label","value","options2","filteredOptions1","filter","item","toLowerCase","includes","filteredOptions2","created","checkedGroup1","map","checkedGroup2","methods","search","console","log","filterOptions1","filterOptions2"],"sources":["/root/webserve/AI-Web/ai-web/front/src/components/LabTools/Sensor/Aotu_Config.vue"],"sourcesContent":["<template>\n  <div style=\"display: flex; width: 100%; justify-content: center;\">\n    <el-steps :active=\"2\" finish-status=\"success\" simple style=\"width: 70%; margin-top: 5px;\">\n      <el-step title=\"Test Case Overview\"></el-step>\n      <el-step title=\"Environment Configuration\"></el-step>\n      <el-step title=\"Aotumation Configuration\"></el-step>\n    </el-steps>\n  </div>\n  \n    <div class=\"search-form\">\n      <div class=\"row\">\n  \n          <div class=\"input-group\">\n          <label for=\"selection1\">Platform:</label>\n          <input id=\"selection1\" :value=\"selection1\" readonly>\n        </div>\n  \n        <div class=\"input-group\">\n          <label for=\"selection2\">Test_Cycle_Name:</label>\n          <input id=\"selection2\" :value=\"selection2\" readonly>\n        </div>\n  \n        <div class=\"input-group\">\n          <label for=\"selection3\">Cycle_Config:</label>\n          <input id=\"selection3\" :value=\"selection3\" readonly>\n        </div>\n  \n        <div class=\"input-group\">\n          <label for=\"selection4\">Test_Domain:</label>\n          <el-select v-model=\"selection4\" multiple placeholder=\"请选择\" disabled>\n            <el-option\n              v-for=\"item in options\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </div>\n  \n      </div>\n    </div>\n  \n    <div class=\"checkbox-groups-container\">\n      <!-- 第一组多选框 -->\n  <div class=\"checkbox-group\">\n    <el-input\n      v-model=\"searchText1\"\n      placeholder=\"搜索...\"\n      clearable\n      @clear=\"filterOptions1\"\n      @input=\"filterOptions1\">\n    </el-input>\n    <el-scrollbar style=\"height: 300px;\">\n      Test_Suite\n      <el-checkbox-group v-model=\"checkedGroup1\">\n        <el-checkbox\n          v-for=\"item in filteredOptions1\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          border>\n        </el-checkbox>\n      </el-checkbox-group>\n    </el-scrollbar>\n  </div>\n\n  <!-- 第二组多选框 -->\n  <div class=\"checkbox-group\">\n    <el-input\n      v-model=\"searchText2\"\n      placeholder=\"搜索...\"\n      clearable\n      @clear=\"filterOptions2\"\n      @input=\"filterOptions2\">\n    </el-input>\n    <el-scrollbar style=\"height: 300px;\">\n      Test_Case\n      <el-checkbox-group v-model=\"checkedGroup2\">\n        <el-checkbox\n          v-for=\"item in filteredOptions2\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          border>\n        </el-checkbox>\n      </el-checkbox-group>\n    </el-scrollbar>\n  </div>\n    </div>\n      \n  \n    <div class=\"button-container\">\n        <button @click=\"Build\">Build</button>\n      </div>\n  </template>\n  \n  <script>\n  import { computed, ref } from 'vue'; // 确保 ref 被导入\n  import { useStore } from 'vuex';\n  export default {\n    setup() {\n      const store = useStore();\n  \n      // 使用 computed 来创建只读的计算属性，它们将从 Vuex store 中获取状态\n      const selection1 = computed(() => store.state.selections.selection1);\n      const selection2 = computed(() => store.state.selections.selection2);\n      const selection3 = computed(() => store.state.selections.selection3);\n      const selection4 = computed(() => store.state.selections.selection4);\n  \n      // 假设你有一个 action 来加载数据\n      store.dispatch('loadSelections');\n  \n      // 搜索文本的响应式引用\n    const searchText1 = ref('');\n    const searchText2 = ref('');\n\n\n    const options1=ref (\n          { label: 'Suit_Marker_Mapping_1', value: 'Suit_Marker_Mapping_1' },\n          { label: 'Suit_Marker_Mapping_2', value: 'Suit_Marker_Mapping_2' },\n          { label: 'Suit_Marker_Mapping_3', value: 'Suit_Marker_Mapping_3' },\n          { label: 'Suit_Marker_Mapping_4', value: 'Suit_Marker_Mapping_4' },\n          { label: 'Suit_Marker_Mapping_5', value: 'Suit_Marker_Mapping_5' },\n          { label: 'Suit_Marker_Mapping_6', value: 'Suit_Marker_Mapping_6' },\n          { label: 'Suit_Marker_Mapping_7', value: 'Suit_Marker_Mapping_7' },\n          { label: 'Suit_Marker_Mapping_8', value: 'Suit_Marker_Mapping_8' },\n          { label: 'Suit_Marker_Mapping_9', value: 'Suit_Marker_Mapping_9' },\n          { label: 'Suit_Marker_Mapping_10', value: 'Suit_Marker_Mapping_10' },\n          { label: 'Suit_Marker_Mapping_11', value: 'Suit_Marker_Mapping_11' },\n          \n          // ...更多选项\n          );\n    const options2=ref (\n          { label: 'Case_Marker_1', value: 'Case_Marker_1' },\n          { label: 'Case_Marker_2', value: 'Case_Marker_2' },\n          { label: 'Case_Marker_3', value: 'Case_Marker_3' },\n          { label: 'Case_Marker_4', value: 'Case_Marker_4' },\n          { label: 'Case_Marker_5', value: 'Case_Marker_5' },\n          { label: 'Case_Marker_6', value: 'Case_Marker_6' },\n          { label: 'Case_Marker_7', value: 'Case_Marker_7' },\n          { label: 'Case_Marker_8', value: 'Case_Marker_8' },\n          { label: 'Case_Marker_9', value: 'Case_Marker_9' },\n          { label: 'Case_Marker_10', value: 'Case_Marker_10' },\n          { label: 'Case_Marker_11', value: 'Case_Marker_11' },\n          \n          // ...更多选项\n          );\n\n    // 计算属性，用于根据搜索文本过滤选项\n    const filteredOptions1 = computed(() => {\n      if (!searchText1.value) {\n        return this.options1;\n      }\n      return this.options1.filter(item =>\n        item.label.toLowerCase().includes(searchText1.value.toLowerCase())\n      );\n    });\n\n    const filteredOptions2 = computed(() => {\n      if (!searchText2.value) {\n        return this.options2;\n      }\n      return this.options2.filter(item =>\n        item.label.toLowerCase().includes(searchText2.value.toLowerCase())\n      );\n    });\n\n    return {\n      // ...其他返回值...\n      selection1,\n      selection2,\n      selection3,\n      selection4,\n      searchText1,\n      searchText2,\n      filteredOptions1,\n      filteredOptions2,\n    };\n    },\n    created() {\n      // 在组件创建后设置默认选中的值\n      this.checkedGroup1 = this.options1.map(item => item.value);\n      this.checkedGroup2 = this.options2.map(item => item.value);\n    },\n    methods: {\n      search() {\n        // 在这里执行搜索逻辑\n        console.log('执行搜索', this.selection1, this.selection2, this.selection3, this.selection4);\n      }\n    },filterOptions1() {\n      // 这个方法会在 searchText1 改变时被调用\n      // 过滤 options1 数组并更新 filteredOptions1\n      this.filteredOptions1 = this.options1.filter(item =>\n        item.label.toLowerCase().includes(this.searchText1.toLowerCase())\n      );\n    },\n    filterOptions2() {\n      // 这个方法会在 searchText2 改变时被调用\n      // 过滤 options2 数组并更新 filteredOptions2\n      this.filteredOptions2 = this.options2.filter(item =>\n        item.label.toLowerCase().includes(this.searchText2.toLowerCase())\n      );\n    },\n  };\n  </script>\n  \n  \n  \n  \n  <style scoped>\n  .checkbox-groups-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center; /* 居中对齐 */\n    padding: px; /* 容器内边距 */\n    gap: 30px; /* 组间间隔 */\n  \n  }\n  \n  .checkbox-group {\n    flex: 0 0 20%; /* 减少宽度，不允许多选框组伸缩 */\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\n    border-radius: 4px; /* 圆角边框 */\n    overflow: hidden; /* 隐藏溢出的子元素 */\n    height: 300px; /* 增加多选框组的高度 */\n    border: #a2a2a2 2px solid;\n  }\n  \n  .el-scrollbar {\n    height: 100%; /* 使滚动条高度与父容器相同 */\n    margin: 10px; /* 添加一些外边距 */\n  }\n  \n  .el-checkbox-group {\n    max-height: 100%; /* 使多选框组高度与父容器相同 */\n    overflow-y: auto; /* 设置垂直滚动 */\n    display: flex;\n    flex-direction: column; /* 设置纵向排列 */\n    padding: 10px; /* 组内边距 */\n  }\n  \n  .el-checkbox {\n    margin-bottom: 10px; /* 多选框之间的间距 */\n    transition: background-color 0.3s; /* 添加背景颜色过渡效果 */\n    max-width: 100%; /* 限制多选框的最大宽度 */\n    white-space: nowrap; /* 防止文本换行 */\n    overflow: hidden; /* 隐藏溢出的文本 */\n    text-overflow: ellipsis; /* 显示省略号 */\n  }\n  \n  /* 当多选框被hover时，改变背景颜色 */\n  .el-checkbox:hover {\n    background-color: #f5f5f5;\n  }\n  </style>\n  \n  \n  \n  \n  \n  <style>\n  .el-form-item {\n    margin-bottom: 20px; /* 增加表单项之间的间距 */\n  }\n  \n  .el-input {\n    width: 100%; /* 输入框宽度设置为100% */\n  }\n  \n  .button-container {\n    display: flex;\n    justify-content: flex-end; /* 将按钮对齐到右边 */\n    margin-right: 85px; /* 右边距20px */\n  }\n  \n  .button-container button {\n    margin-top: 1%;\n    padding: 10px 35px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n    font-weight: bold;\n    transition: background-color 0.3s ease;\n  }\n  \n  .button-container button:hover {\n    background-color: #0056b3;\n  }\n  </style>\n  \n  \n  <style scoped>\n  @import \"vue-multiselect/dist/vue-multiselect.css\";\n  \n  \n  .search-form {\n    max-width: 90%;\n    margin: 10px auto;\n    padding: 10px;\n    border: 3px solid #f7f6f6;\n    border-radius: 10px;\n    background: #ffffff;\n  }\n  \n  .row {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 5px;\n  }\n  .input-group {\n    display: flex;\n    flex-direction: column;\n    margin: 0 20px;\n    width: calc(50% - 20px); /* 减去间距的一半 */\n    \n  }\n  \n  .input-group label {\n    margin-bottom: 10px;\n    font-weight: bold;\n  \n  }\n  \n  .input-group input{\n    padding: 0px;\n    border: 2px solid #e6e6e6;\n    border-radius: 4px;\n    width: 100%; /* 选择框宽度调整为100% */\n    font: 1em sans-serif;\n    height: 33px;\n    background: #c9c8c8;\n    \n  }\n  \n  .button-row {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 20px; /* 增加按钮与上方元素的间距 */\n  }\n  \n  .row button {\n    margin-top:1% ;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n    font-weight: bold;\n    transition: background-color 0.3s ease;\n  }\n  \n  .row button:hover {\n    background-color: #0056b3;\n  }\n  \n  \n  \n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}