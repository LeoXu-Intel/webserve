{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        // 发送登录请求到Django后端\n        const response = await this.$axios.post('/api/login/', {\n          username: this.loginForm.username,\n          password: this.loginForm.password\n        });\n        // 登录成功，设置登录状态并导航到 /LabTools\n        if (response.data.success) {\n          localStorage.setItem('isUserLoggedIn', 'true');\n          this.$router.push('/Execution');\n        } else {\n          // 登录失败，显示错误消息\n          alert('Incorrect username or password.');\n        }\n      } catch (error) {\n        // 处理错误情况\n        alert('Login failed. Please try again.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","loginForm","username","password","methods","handleLogin","response","$axios","post","success","localStorage","setItem","$router","push","alert","error"],"sources":["/root/webserve/AI-Web/ai-web/front/src/components/Login.vue"],"sourcesContent":["<template>\n\n  <div class=\"common-layout\">\n    \n    <el-container class=\"container\">    \n    <el-header class=\"header\">NPI-BKC Automation Console</el-header>      \n      <el-main class=\"main\">\n        <el-card class=\"login-card\">\n          <el-form ref=\"loginForm\" :model=\"loginForm\" @submit.prevent=\"handleLogin\">\n            \n            <h1 style=\"text-align: center; font-size: 2em;\">Please Login in</h1>\n\n            <el-form-item label=\"Username:\" prop=\"username\" class=\"bold-and-large\">\n                 <el-input v-model=\"loginForm.username\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"Password:\" prop=\"password\" class=\"bold-and-large\">\n                 <el-input type=\"password\" v-model=\"loginForm.password\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n\n            <el-form-item class=\"login-button-container\">\n              <el-button type=\"primary\" style=\"width:20% \" @click=\"handleLogin\">Login</el-button>\n            </el-form-item>\n\n            \n\n          </el-form>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n\n\n<script>\nexport default {\n  data() {\n  return {\n    loginForm: {\n      username: '',\n      password: '',\n    },\n  };\n},\n\n  methods: {\n    async handleLogin() {\n      try {\n        // 发送登录请求到Django后端\n        const response = await this.$axios.post('/api/login/', {\n          username: this.loginForm.username,\n          password: this.loginForm.password\n        });\n        // 登录成功，设置登录状态并导航到 /LabTools\n        if (response.data.success) {\n          localStorage.setItem('isUserLoggedIn', 'true');\n          this.$router.push('/Execution');\n        } else {\n          // 登录失败，显示错误消息\n          alert('Incorrect username or password.');\n        }\n      } catch (error) {\n        // 处理错误情况\n        alert('Login failed. Please try again.');\n      }\n    },\n},\n\n};\n</script>\n\n\n<style scoped>\n.bold-and-large {\n  font-size: 1.9 em; /* 放大字体大小 */\n  font-weight: bold; \n}\n.common-layout {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%; /* 确保占满父容器的高度 */\n  background-color: #0161aa; /* 蓝色背景 */\n  width: 100%;\n}\n\n.container {\n  width: 100%;\n  max-width: 100%; /* 或者你希望的最大宽度 */\n}\n\n.header {\n width: 100%;\n position: absolute; /* 绝对定位 */\n  top: 0; /* 距离顶部 0px */\n  left: 0; /* 距离左侧 0px */\n  font-size: 50px; /* 标题字体大小，根据需要调整 */\n  color: #fff;\n  margin: 0px; /* 添加一些边距，根据需要调整 */\n  line-height: normal; /* 重置行高 */\n  background: linear-gradient(to bottom, #0074B9, #003458);\n  height: 13%;\n  text-align: start;\n}\n\n.main {\n  display: flex;\n  justify-content: center;\n}\n\n.login-card {\n  width: 35%;\n  padding: 20px;\n}\n\n.el-form-item {\n  margin-bottom: 24px; /* 增加表单项之间的间距 */\n}\n\n.login-button-container {\n  display: flex;\n  justify-content: center; /* 居中按钮 */\n  padding: 0; /* 如果需要，移除内边距 */\n}\n\n\n</style>\n\n\n\n"],"mappings":";AAmCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EAECC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,aAAa,EAAE;UACrDN,QAAQ,EAAE,IAAI,CAACD,SAAS,CAACC,QAAQ;UACjCC,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACE;QAC3B,CAAC,CAAC;QACF;QACA,IAAIG,QAAQ,CAACN,IAAI,CAACS,OAAO,EAAE;UACzBC,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC;UAC9C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL;UACAC,KAAK,CAAC,iCAAiC,CAAC;QAC1C;MACF,EAAE,OAAOC,KAAK,EAAE;QACd;QACAD,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF;EACJ;AAEA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}