{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport Login from '../components/Login.vue'; // 导入登录组件\n\nimport Container from \"../components/Container.vue\";\nimport LoadingView from \"../components/Loading.vue\";\nimport HSD_API from \"../components/LabTools/Sensor/HSD_API.vue\";\nimport Test_Case_Overview from \"../components/LabTools/Sensor/Test_Case_Overview.vue\";\nimport JenkinsAPI_P from \"../components/LabTools/Sensor/JenkinsAPI-P.vue\";\n\n// 定义路由数组\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n},\n// 将根路径重定向到登录\n{\n  path: '/login',\n  component: Login\n},\n// 添加登录路由\n\n// LabTools\n{\n  path: \"/LabTools\",\n  component: Container,\n  children: [{\n    path: \"\",\n    components: {\n      main: LoadingView\n    }\n  }, {\n    path: \"Sensor/Test_Case_Overview\",\n    components: {\n      main: Test_Case_Overview\n    }\n  }, {\n    path: \"Sensor/JenkinsAPI_P\",\n    components: {\n      main: JenkinsAPI_P\n    }\n  }, {\n    path: \"Sensor/HSD_API\",\n    components: {\n      main: HSD_API\n    }\n  }],\n  meta: {\n    requiresAuth: true\n  } // 添加元数据标记需要认证\n}];\n\n// 创建路由器实例\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// 全局前置守卫\nrouter.beforeEach((to, from, next) => {\n  // 检查路由是否需要认证\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 如果用户未登录，则重定向到登录页面\n    if (!isLoggedIn()) {\n      next('/login');\n    } else {\n      next(); // 如果已登录，继续导航\n    }\n  } else {\n    next(); // 对于不需要认证的路由，直接放行\n  }\n});\n\n// 检查用户是否已登录的函数\nfunction isLoggedIn() {\n  return localStorage.getItem('isUserLoggedIn') === 'true';\n}\n\n// 导出路由器实例\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Login","Container","LoadingView","HSD_API","Test_Case_Overview","JenkinsAPI_P","routes","path","redirect","component","children","components","main","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","isLoggedIn","localStorage","getItem"],"sources":["C:/Users/axu/OneDrive - Intel Corporation/Desktop/Web serve/webserve-0320/webserve/front/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport Login from '../components/Login.vue'; // 导入登录组件\r\n\r\nimport Container from \"../components/Container.vue\";\r\nimport LoadingView from \"../components/Loading.vue\";\r\n\r\nimport HSD_API from \"../components/LabTools/Sensor/HSD_API.vue\";\r\nimport Test_Case_Overview from \"../components/LabTools/Sensor/Test_Case_Overview.vue\";\r\nimport JenkinsAPI_P from \"../components/LabTools/Sensor/JenkinsAPI-P.vue\";\r\n\r\n// 定义路由数组\r\nconst routes = [\r\n  { path: '/', redirect: '/login' }, // 将根路径重定向到登录\r\n  { path: '/login', component: Login }, // 添加登录路由\r\n\r\n  // LabTools\r\n  {\r\n    path: \"/LabTools\",\r\n    component: Container,\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        components: {\r\n          main: LoadingView,\r\n        },\r\n      },\r\n      {\r\n        path: \"Sensor/Test_Case_Overview\",\r\n        components: {\r\n          main: Test_Case_Overview,\r\n        },\r\n      },\r\n      {\r\n        path: \"Sensor/JenkinsAPI_P\",\r\n        components: {\r\n          main: JenkinsAPI_P,\r\n        },\r\n      },\r\n      {\r\n        path: \"Sensor/HSD_API\",\r\n        components: {\r\n          main: HSD_API,\r\n        },\r\n      },\r\n    ],\r\n    meta: { requiresAuth: true }, // 添加元数据标记需要认证\r\n  },\r\n];\r\n\r\n// 创建路由器实例\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes,\r\n});\r\n\r\n// 全局前置守卫\r\nrouter.beforeEach((to, from, next) => {\r\n  // 检查路由是否需要认证\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    // 如果用户未登录，则重定向到登录页面\r\n    if (!isLoggedIn()) {\r\n      next('/login');\r\n    } else {\r\n      next(); // 如果已登录，继续导航\r\n    }\r\n  } else {\r\n    next(); // 对于不需要认证的路由，直接放行\r\n  }\r\n});\r\n\r\n// 检查用户是否已登录的函数\r\nfunction isLoggedIn() {\r\n  return localStorage.getItem('isUserLoggedIn') === 'true';\r\n}\r\n\r\n// 导出路由器实例\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,yBAAyB,CAAC,CAAC;;AAE7C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,OAAOC,OAAO,MAAM,2CAA2C;AAC/D,OAAOC,kBAAkB,MAAM,sDAAsD;AACrF,OAAOC,YAAY,MAAM,gDAAgD;;AAEzE;AACA,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,QAAQ,EAAE;AAAS,CAAC;AAAE;AACnC;EAAED,IAAI,EAAE,QAAQ;EAAEE,SAAS,EAAET;AAAM,CAAC;AAAE;;AAEtC;AACA;EACEO,IAAI,EAAE,WAAW;EACjBE,SAAS,EAAER,SAAS;EACpBS,QAAQ,EAAE,CACR;IACEH,IAAI,EAAE,EAAE;IACRI,UAAU,EAAE;MACVC,IAAI,EAAEV;IACR;EACF,CAAC,EACD;IACEK,IAAI,EAAE,2BAA2B;IACjCI,UAAU,EAAE;MACVC,IAAI,EAAER;IACR;EACF,CAAC,EACD;IACEG,IAAI,EAAE,qBAAqB;IAC3BI,UAAU,EAAE;MACVC,IAAI,EAAEP;IACR;EACF,CAAC,EACD;IACEE,IAAI,EAAE,gBAAgB;IACtBI,UAAU,EAAE;MACVC,IAAI,EAAET;IACR;EACF,CAAC,CACF;EACDU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAE;AAChC,CAAC,CACF;;AAED;AACA,MAAMC,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,OAAO,EAAEjB,gBAAgB,CAACkB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cb;AACF,CAAC,CAAC;;AAEF;AACAS,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD;IACA,IAAI,CAACa,UAAU,CAAC,CAAC,EAAE;MACjBJ,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC,CAAC,CAAC;IACV;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;;AAEF;AACA,SAASI,UAAUA,CAAA,EAAG;EACpB,OAAOC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,KAAK,MAAM;AAC1D;;AAEA;AACA,eAAed,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}