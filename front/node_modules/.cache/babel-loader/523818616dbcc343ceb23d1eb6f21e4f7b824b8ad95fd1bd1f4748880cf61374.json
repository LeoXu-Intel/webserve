{"ast":null,"code":"import { defineComponent } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus'; // 确保你已经正确导入了 ElMessage\n\nexport default defineComponent({\n  methods: {\n    triggerJenkins() {\n      axios.get(\"/test\", {\n        params: {\n          // 你的参数（如果有的话）\n        }\n      }).then(response => {\n        this.result = response.data.result;\n        if (this.result && this.result.result === 'SUCCESS') {\n          // 如果构建成功，显示成功消息\n          ElMessage({\n            message: 'Jenkins build run successfully!',\n            type: 'success'\n          });\n        } else {\n          // 如果构建不成功，显示错误消息\n          ElMessage({\n            message: 'Jenkins build did not run successfully.',\n            type: 'error'\n          });\n        }\n      }).catch(error => {\n        // 如果请求失败，显示错误消息\n        ElMessage({\n          message: `Error: ${error.message}`,\n          type: 'error'\n        });\n      });\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","axios","ElMessage","methods","triggerJenkins","get","params","then","response","result","data","message","type","catch","error"],"sources":["C:\\Users\\axu\\OneDrive - Intel Corporation\\Desktop\\Web serve\\webserve-0320\\webserve\\front\\src\\components\\LabTools\\Sensor\\JenkinsAPI-N.vue"],"sourcesContent":["<template>\r\n  <el-row style=\"margin-top: 20px;\">\r\n    <el-col :span=\"12\" :offset=\"1\">\r\n      <el-card class=\"box-card\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>Jenkins API Trigger</span>\r\n        </div>\r\n        <el-row type=\"flex\" justify=\"center\" style=\"margin-top: 30px;\">\r\n          <el-button type=\"primary\" @click=\"triggerJenkins\">Trigger Jenkins Build</el-button>\r\n        </el-row>\r\n      </el-card>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus'; // 确保你已经正确导入了 ElMessage\r\n\r\nexport default defineComponent({\r\n  methods: {\r\n    triggerJenkins() {\r\n      axios.get(\"/test\", {\r\n        params: {\r\n          // 你的参数（如果有的话）\r\n        }\r\n      }).then((response) => {\r\n        this.result = response.data.result;\r\n        if (this.result && this.result.result === 'SUCCESS') {\r\n          // 如果构建成功，显示成功消息\r\n          ElMessage({\r\n            message: 'Jenkins build run successfully!',\r\n            type: 'success',\r\n          });\r\n        } else {\r\n          // 如果构建不成功，显示错误消息\r\n          ElMessage({\r\n            message: 'Jenkins build did not run successfully.',\r\n            type: 'error',\r\n          });\r\n        }\r\n      }).catch((error) => {\r\n        // 如果请求失败，显示错误消息\r\n        ElMessage({\r\n          message: `Error: ${error.message}`,\r\n          type: 'error',\r\n        });\r\n      });\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.box-card {\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n  text-align: center;\r\n}\r\n.box-card:hover {\r\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n}\r\n</style>\r\n"],"mappings":"AAkBA,SAASA,eAAc,QAAS,KAAK;AACrC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,cAAc,EAAE;;AAE1C,eAAeF,eAAe,CAAC;EAC7BG,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACfH,KAAK,CAACI,GAAG,CAAC,OAAO,EAAE;QACjBC,MAAM,EAAE;UACN;QAAA;MAEJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACpB,IAAI,CAACC,MAAK,GAAID,QAAQ,CAACE,IAAI,CAACD,MAAM;QAClC,IAAI,IAAI,CAACA,MAAK,IAAK,IAAI,CAACA,MAAM,CAACA,MAAK,KAAM,SAAS,EAAE;UACnD;UACAP,SAAS,CAAC;YACRS,OAAO,EAAE,iCAAiC;YAC1CC,IAAI,EAAE;UACR,CAAC,CAAC;QACJ,OAAO;UACL;UACAV,SAAS,CAAC;YACRS,OAAO,EAAE,yCAAyC;YAClDC,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAClB;QACAZ,SAAS,CAAC;UACRS,OAAO,EAAG,UAASG,KAAK,CAACH,OAAQ,EAAC;UAClCC,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}