{"ast":null,"code":"export function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return \" aaaa \";\n}","map":{"version":3,"names":[],"sources":["C:\\Users\\axu\\OneDrive - Intel Corporation\\Desktop\\Web serve\\webserve-0320\\webserve\\front\\src\\components\\LabTools\\Sensor\\Test_Case_Overview.vue"],"sourcesContent":["<template>\r\naaaa\r\n\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport { mapState, mapMutations } from 'vuex';\r\n\r\nexport default {\r\n  computed: {\r\n    // 使用Vuex的辅助函数来映射state到计算属性\r\n    ...mapState({\r\n      selection1: state => state.selections.selection1,\r\n      selection2: state => state.selections.selection2,\r\n      selection3: state => state.selections.selection3,\r\n      selection4: state => state.selections.selection4,\r\n    }),\r\n  },\r\n\r\n  created() {\r\n    this.loadSelections();\r\n  },\r\n  data() {\r\n    return {\r\n      selection1: '',\r\n      selection2: '',\r\n      selection3: '',\r\n      selection4: [],\r\n      options: [{\r\n          value: 'QAT',\r\n          label: 'QAT'\r\n        }, {\r\n          value: 'DLB',\r\n          label: 'DLB'\r\n        }, {\r\n          value: 'DSA',\r\n          label: 'DSA'\r\n        }, {\r\n          value: 'Networking',\r\n          label: 'Networking'\r\n        }, {\r\n          value: 'SRIOV',\r\n          label: 'SRIOV'\r\n        }],\r\n        value1: [],\r\n        value2: [],\r\n\r\n       tableData: [{\r\n          ID: 'Test_ID',\r\n          Title: 'Title',\r\n          Domain: 'Domain',\r\n          Domain_Detail: 'Domain Detail',\r\n          Automation_Marker: 'Automation Marker',\r\n          Automation_Statues: 'Automation Statues',\r\n          Automation_Comment: 'Automation Comment'     \r\n        }, {\r\n          ID: 'Test_ID',\r\n          Title: 'Title',\r\n          Domain: 'Domain',\r\n          Domain_Detail: 'Domain Detail',\r\n          Automation_Marker: 'Automation Marker',\r\n          Automation_Statues: 'Automation Statues',\r\n          Automation_Comment: 'Automation Comment'     \r\n        },{\r\n          ID: 'Test_ID',\r\n          Title: 'Title',\r\n          Domain: 'Domain',\r\n          Domain_Detail: 'Domain Detail',\r\n          Automation_Marker: 'Automation Marker',\r\n          Automation_Statues: 'Automation Statues',\r\n          Automation_Comment: 'Automation Comment'     \r\n        },{\r\n          ID: 'Test_ID',\r\n          Title: 'Title',\r\n          Domain: 'Domain',\r\n          Domain_Detail: 'Domain Detail',\r\n          Automation_Marker: 'Automation Marker',\r\n          Automation_Statues: 'Automation Statues',\r\n          Automation_Comment: 'Automation Comment'     \r\n        },{\r\n          ID: 'Test_ID',\r\n          Title: 'Title',\r\n          Domain: 'Domain',\r\n          Domain_Detail: 'Domain Detail',\r\n          Automation_Marker: 'Automation Marker',\r\n          Automation_Statues: 'Automation Statues',\r\n          Automation_Comment: 'Automation Comment'     \r\n        },{\r\n          ID: 'Test_ID',\r\n          Title: 'Title',\r\n          Domain: 'Domain',\r\n          Domain_Detail: 'Domain Detail',\r\n          Automation_Marker: 'Automation Marker',\r\n          Automation_Statues: 'Automation Statues',\r\n          Automation_Comment: 'Automation Comment'     \r\n        },{\r\n          ID: 'Test_ID',\r\n          Title: 'Title',\r\n          Domain: 'Domain',\r\n          Domain_Detail: 'Domain Detail',\r\n          Automation_Marker: 'Automation Marker',\r\n          Automation_Statues: 'Automation Statues',\r\n          Automation_Comment: 'Automation Comment'     \r\n        },{\r\n          ID: 'Test_ID',\r\n          Title: 'Title',\r\n          Domain: 'Domain',\r\n          Domain_Detail: 'Domain Detail',\r\n          Automation_Marker: 'Automation Marker',\r\n          Automation_Statues: 'Automation Statues',\r\n          Automation_Comment: 'Automation Comment'     \r\n        },\r\n        ]\r\n    };\r\n  },\r\n  methods: {\r\n    // 使用Vuex的辅助函数来映射mutations到方法\r\n    ...mapMutations(['updateSelections']),\r\n    loadSelections() {\r\n      // 假设你有一个action来加载数据\r\n      this.$store.dispatch('loadSelections').then(() => {\r\n        const selections = this.$store.state.selections;\r\n        this.updateSelections(selections);\r\n      });\r\n    },\r\n    navigateToOtherPage() {\r\n      // 在跳转前保存当前的选择\r\n      this.updateSelections({\r\n        selection1: this.selection1,\r\n        selection2: this.selection2,\r\n        selection3: this.selection3,\r\n        selection4: this.selection4,\r\n      });\r\n      // 然后跳转到下一个页面\r\n      this.$router.push('/LabTools/Sensor/Env_Config'); // 确保这里的路径是你要跳转到的下一个页面的路径\r\n    },\r\n    tableRowClassName({ rowIndex }) {\r\n      return rowIndex === 0 ? 'first-row' : '';\r\n    },\r\n    search() {\r\n      // 在这里执行搜索逻辑\r\n      console.log('执行搜索', this.selection1, this.selection2, this.selection3, this.selection4);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.el-table__header-wrapper tr th {\r\n  background-color: #0056b3 !important; /* 使用 !important 来确保样式的优先级 */\r\n  color: white; /* 可以设置字体颜色为白色，如果需要的话 */\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  justify-content: flex-end; /* 将按钮对齐到右边 */\r\n  margin-right: 85px; /* 右边距20px */\r\n}\r\n\r\n.button-container button {\r\n  margin-top: 1%;\r\n  padding: 10px 35px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.button-container button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n\r\n\r\n<style scoped>\r\n@import \"vue-multiselect/dist/vue-multiselect.css\";\r\n\r\n\r\n.search-form {\r\n  max-width: 90%;\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n  border: 3px solid #f7f6f6;\r\n  border-radius: 10px;\r\n  background: #ffffff;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 20px;\r\n  width: calc(50% - 20px); /* 减去间距的一半 */\r\n}\r\n\r\n.input-group label {\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n\r\n}\r\n\r\n.input-group select{\r\n  padding: 0px;\r\n  border: 2px solid #e6e6e6;\r\n  border-radius: 4px;\r\n  width: 100%; /* 选择框宽度调整为100% */\r\n  font: 1em sans-serif;\r\n  height: 33px;\r\n  \r\n}\r\n\r\n\r\n.button-row {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 0px; /* 增加按钮与上方元素的间距 */\r\n}\r\n\r\n.row button {\r\n  margin-top:1% ;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.row button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n</style>\r\n"],"mappings":";SAAU,QAGV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}