{"ast":null,"code":"import Multiselect from 'vue-multiselect';\nexport default {\n  components: {\n    Multiselect\n  },\n  created() {\n    this.loadSelections();\n  },\n  data() {\n    return {\n      selection1: '',\n      selection2: '',\n      selection3: '',\n      selection4: [],\n      options: [{\n        value: 'QAT',\n        label: 'QAT'\n      }, {\n        value: 'DLB',\n        label: 'DLB'\n      }, {\n        value: 'DSA',\n        label: 'DSA'\n      }, {\n        value: 'Networking',\n        label: 'Networking'\n      }, {\n        value: 'SRIOV',\n        label: 'SRIOV'\n      }],\n      value1: [],\n      value2: [],\n      checkedGroup1: [],\n      checkedGroup2: [],\n      options1: [{\n        label: '备选项1',\n        value: 'option1'\n      }, {\n        label: '备选项2',\n        value: 'option2'\n      }, {\n        label: '备选项3',\n        value: 'option3'\n      }, {\n        label: '备选项4',\n        value: 'option4'\n      }, {\n        label: '备选项5',\n        value: 'option5'\n      }, {\n        label: '备选项6',\n        value: 'option6'\n      }\n\n      // ...更多选项\n      ],\n      options2: [{\n        label: '备选项-1',\n        value: 'option11'\n      }, {\n        label: '备选项-2',\n        value: 'option12'\n      }\n\n      // ...更多选项\n      ]\n    };\n  },\n  methods: {\n    loadSelections() {\n      // 假设你有一个 action 来加载数据\n      this.$store.dispatch('loadSelections').then(() => {\n        const selections = this.$store.state.selections;\n        this.selection1 = selections.selection1 || '';\n        this.selection2 = selections.selection2 || '';\n        this.selection3 = selections.selection3 || '';\n        this.selection4 = selections.selection4 || [];\n      });\n    },\n    search() {\n      // 在这里执行搜索逻辑\n      console.log('执行搜索', this.selection1, this.selection2, this.selection3, this.selection4);\n    }\n  }\n};","map":{"version":3,"names":["Multiselect","components","created","loadSelections","data","selection1","selection2","selection3","selection4","options","value","label","value1","value2","checkedGroup1","checkedGroup2","options1","options2","methods","$store","dispatch","then","selections","state","search","console","log"],"sources":["C:\\Users\\axu\\OneDrive - Intel Corporation\\Desktop\\Web serve\\webserve-0320\\webserve\\front\\src\\components\\LabTools\\Sensor\\Aotu_Config.vue"],"sourcesContent":["<template>\r\n<div style=\"display: flex; width: 100%; justify-content: center;\">\r\n  <el-steps :active=\"1\" finish-status=\"success\" simple style=\"width: 60%; margin-top: 20px;\">\r\n    <el-step title=\"Test Case Overview\"></el-step>\r\n    <el-step title=\"Environment Configuration\"></el-step>\r\n    <el-step title=\"Aotumation Configuration\"></el-step>\r\n  </el-steps>\r\n</div>\r\n\r\n  <div class=\"search-form\">\r\n    <div class=\"row\">\r\n\r\n      <div class=\"input-group\">\r\n        <label for=\"select1\">Platform:</label>\r\n        <select id=\"select1\" v-model=\"selection1\">\r\n          <option value=\"option1\">SP1</option>\r\n          <option value=\"option2\">SP2</option>\r\n          <!-- 更多选项 -->\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"input-group\">\r\n        <label for=\"select2\">Test_Cycle_Name:</label>\r\n        <select id=\"select2\" v-model=\"selection2\">\r\n          <option value=\"option1\">Test_Cycle_1</option>\r\n          <option value=\"option2\">Test_Cycle_2</option>\r\n          <!-- 更多选项 -->\r\n        </select>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n\r\n      <div class=\"input-group\">\r\n        <label for=\"select3\">Cycle_Config:</label>\r\n        <select id=\"select3\" v-model=\"selection3\">\r\n          <option value=\"option1\">Cycle_Config_1</option>\r\n          <option value=\"option2\">Cycle_Config_2</option>\r\n          <!-- 更多选项 -->\r\n        </select>\r\n      </div>\r\n\r\n        <div class=\"input-group\">\r\n        <label for=\"select4\">Test_Domain:</label>\r\n          <el-select v-model=\"value1\" multiple placeholder=\"请选择\">\r\n            <el-option\r\n              v-for=\"item in options\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"checkbox-groups-container\">\r\n    <!-- 第一组多选框 -->\r\n    <div class=\"checkbox-group\">\r\n      <el-scrollbar style=\"height: 300px;\">\r\n        <el-checkbox-group v-model=\"checkedGroup1\">\r\n          <el-checkbox\r\n            v-for=\"item in options1\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            border>\r\n          </el-checkbox>\r\n        </el-checkbox-group>\r\n      </el-scrollbar>\r\n    </div>\r\n    <!-- 第二组多选框 -->\r\n    <div class=\"checkbox-group\">\r\n      <el-scrollbar style=\"height: 300px;\">\r\n        <el-checkbox-group v-model=\"checkedGroup2\">\r\n          <el-checkbox\r\n            v-for=\"item in options2\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            border>\r\n          </el-checkbox>\r\n        </el-checkbox-group>\r\n      </el-scrollbar>\r\n    </div>\r\n  </div>\r\n    \r\n\r\n  <div class=\"button-container\">\r\n      <button @click=\"Build\">Build</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Multiselect from 'vue-multiselect';\r\n\r\nexport default {\r\n  components: { Multiselect },\r\n  created() {\r\n    this.loadSelections();\r\n  },\r\n  data() {\r\n    return {\r\n      selection1: '',\r\n      selection2: '',\r\n      selection3: '',\r\n      selection4: [],\r\n      options: [{\r\n          value: 'QAT',\r\n          label: 'QAT'\r\n        }, {\r\n          value: 'DLB',\r\n          label: 'DLB'\r\n        }, {\r\n          value: 'DSA',\r\n          label: 'DSA'\r\n        }, {\r\n          value: 'Networking',\r\n          label: 'Networking'\r\n        }, {\r\n          value: 'SRIOV',\r\n          label: 'SRIOV'\r\n        }],\r\n        value1: [],\r\n        value2: [],\r\n       checkedGroup1: [],\r\n      checkedGroup2: [],\r\n      options1: [\r\n        { label: '备选项1', value: 'option1' },\r\n        { label: '备选项2', value: 'option2' },\r\n        { label: '备选项3', value: 'option3' },\r\n        { label: '备选项4', value: 'option4' },\r\n        { label: '备选项5', value: 'option5' },\r\n        { label: '备选项6', value: 'option6' },\r\n        \r\n        // ...更多选项\r\n      ],\r\n      options2: [\r\n        { label: '备选项-1', value: 'option11' },\r\n        { label: '备选项-2', value: 'option12' },\r\n        \r\n        // ...更多选项\r\n      ],\r\n\r\n    };\r\n  },\r\n  methods: {\r\n    loadSelections() {\r\n      // 假设你有一个 action 来加载数据\r\n      this.$store.dispatch('loadSelections').then(() => {\r\n        const selections = this.$store.state.selections;\r\n        this.selection1 = selections.selection1 || '';\r\n        this.selection2 = selections.selection2 || '';\r\n        this.selection3 = selections.selection3 || '';\r\n        this.selection4 = selections.selection4 || [];\r\n      });\r\n    },\r\n    search() {\r\n      // 在这里执行搜索逻辑\r\n      console.log('执行搜索', this.selection1, this.selection2, this.selection3, this.selection4);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.checkbox-groups-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center; /* 居中对齐 */\r\n  padding: 20px; /* 容器内边距 */\r\n  gap: 30px; /* 组间间隔 */\r\n}\r\n\r\n.checkbox-group {\r\n  flex: 0 0 20%; /* 减少宽度，不允许多选框组伸缩 */\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\r\n  border-radius: 4px; /* 圆角边框 */\r\n  overflow: hidden; /* 隐藏溢出的子元素 */\r\n  height: 250px; /* 增加多选框组的高度 */\r\n}\r\n\r\n.el-scrollbar {\r\n  height: 100%; /* 使滚动条高度与父容器相同 */\r\n  margin: 10px; /* 添加一些外边距 */\r\n}\r\n\r\n.el-checkbox-group {\r\n  max-height: 100%; /* 使多选框组高度与父容器相同 */\r\n  overflow-y: auto; /* 设置垂直滚动 */\r\n  display: flex;\r\n  flex-direction: column; /* 设置纵向排列 */\r\n  padding: 10px; /* 组内边距 */\r\n}\r\n\r\n.el-checkbox {\r\n  margin-bottom: 10px; /* 多选框之间的间距 */\r\n  transition: background-color 0.3s; /* 添加背景颜色过渡效果 */\r\n  max-width: 100%; /* 限制多选框的最大宽度 */\r\n  white-space: nowrap; /* 防止文本换行 */\r\n  overflow: hidden; /* 隐藏溢出的文本 */\r\n  text-overflow: ellipsis; /* 显示省略号 */\r\n}\r\n\r\n/* 当多选框被hover时，改变背景颜色 */\r\n.el-checkbox:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n<style>\r\n.el-form-item {\r\n  margin-bottom: 20px; /* 增加表单项之间的间距 */\r\n}\r\n\r\n.el-input {\r\n  width: 100%; /* 输入框宽度设置为100% */\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  justify-content: flex-end; /* 将按钮对齐到右边 */\r\n  margin-right: 85px; /* 右边距20px */\r\n}\r\n\r\n.button-container button {\r\n  margin-top: 1%;\r\n  padding: 10px 35px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.button-container button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n\r\n\r\n<style scoped>\r\n@import \"vue-multiselect/dist/vue-multiselect.css\";\r\n\r\n\r\n.search-form {\r\n  max-width: 90%;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 3px solid #f7f6f6;\r\n  border-radius: 10px;\r\n  background: #ffffff;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 10px;\r\n  width: calc(50% - 20px); /* 减去间距的一半 */\r\n \r\n}\r\n\r\n.input-group label {\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n\r\n}\r\n\r\n.input-group select{\r\n  padding: 0px;\r\n  border: 2px solid #e6e6e6;\r\n  border-radius: 4px;\r\n  width: 100%; /* 选择框宽度调整为100% */\r\n  font: 1em sans-serif;\r\n  height: 33px;\r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px; /* 增加按钮与上方元素的间距 */\r\n}\r\n\r\n.row button {\r\n  margin-top:1% ;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.row button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n\r\n\r\n</style>\r\n"],"mappings":"AA6FA,OAAOA,WAAU,MAAO,iBAAiB;AAEzC,eAAe;EACbC,UAAU,EAAE;IAAED;EAAY,CAAC;EAC3BE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,CAAC;QACNC,KAAK,EAAE,KAAK;QACZC,KAAK,EAAE;MACT,CAAC,EAAE;QACDD,KAAK,EAAE,KAAK;QACZC,KAAK,EAAE;MACT,CAAC,EAAE;QACDD,KAAK,EAAE,KAAK;QACZC,KAAK,EAAE;MACT,CAAC,EAAE;QACDD,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE;MACT,CAAC,EAAE;QACDD,KAAK,EAAE,OAAO;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;MACFC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACXC,aAAa,EAAE,EAAE;MAClBC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,CACR;QAAEL,KAAK,EAAE,MAAM;QAAED,KAAK,EAAE;MAAU,CAAC,EACnC;QAAEC,KAAK,EAAE,MAAM;QAAED,KAAK,EAAE;MAAU,CAAC,EACnC;QAAEC,KAAK,EAAE,MAAM;QAAED,KAAK,EAAE;MAAU,CAAC,EACnC;QAAEC,KAAK,EAAE,MAAM;QAAED,KAAK,EAAE;MAAU,CAAC,EACnC;QAAEC,KAAK,EAAE,MAAM;QAAED,KAAK,EAAE;MAAU,CAAC,EACnC;QAAEC,KAAK,EAAE,MAAM;QAAED,KAAK,EAAE;MAAU;;MAElC;MAAA,CACD;MACDO,QAAQ,EAAE,CACR;QAAEN,KAAK,EAAE,OAAO;QAAED,KAAK,EAAE;MAAW,CAAC,EACrC;QAAEC,KAAK,EAAE,OAAO;QAAED,KAAK,EAAE;MAAW;;MAEpC;MAAA;IAGJ,CAAC;EACH,CAAC;EACDQ,OAAO,EAAE;IACPf,cAAcA,CAAA,EAAG;MACf;MACA,IAAI,CAACgB,MAAM,CAACC,QAAQ,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAC,MAAM;QAChD,MAAMC,UAAS,GAAI,IAAI,CAACH,MAAM,CAACI,KAAK,CAACD,UAAU;QAC/C,IAAI,CAACjB,UAAS,GAAIiB,UAAU,CAACjB,UAAS,IAAK,EAAE;QAC7C,IAAI,CAACC,UAAS,GAAIgB,UAAU,CAAChB,UAAS,IAAK,EAAE;QAC7C,IAAI,CAACC,UAAS,GAAIe,UAAU,CAACf,UAAS,IAAK,EAAE;QAC7C,IAAI,CAACC,UAAS,GAAIc,UAAU,CAACd,UAAS,IAAK,EAAE;MAC/C,CAAC,CAAC;IACJ,CAAC;IACDgB,MAAMA,CAAA,EAAG;MACP;MACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACrB,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,UAAU,CAAC;IACzF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}