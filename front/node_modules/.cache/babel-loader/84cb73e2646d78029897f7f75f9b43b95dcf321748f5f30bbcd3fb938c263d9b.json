{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport configData from '@/assets/config.json';\nimport { reactive } from 'vue';\nexport default {\n  setup() {\n    const store = useStore();\n\n    // 使用 computed 来创建只读的计算属性，它们将从 Vuex store 中获取状态\n    const selection1 = computed(() => store.state.selections.selection1);\n    const selection2 = computed(() => store.state.selections.selection2);\n    const selection3 = computed(() => store.state.selections.selection3);\n    const selection4 = computed(() => store.state.selections.selection4);\n    const activeName = computed(() => store.state.activeTab); // 假设 activeTab 保存在 Vuex store 的状态中\n    const combinedTabsConfig = computed(() => configData); // 异步读取配置文件\n    const forms = reactive({}); // 为每个tab和formItem创建响应式属性\n\n    // 初始化forms对象\n    configData.forEach(tab => {\n      forms[tab.label] = {};\n      tab.formItems.forEach(item => {\n        forms[tab.label][item.model] = '';\n      });\n    });\n\n    // 定义build方法\n    const build = () => {\n      // 这里应该是你的构建逻辑\n      console.log('Build function called');\n      this.$router.push('/LabTools/Sensor/Aotu_Config');\n    };\n\n    // 返回响应式引用和函数...\n    return {\n      selection1,\n      selection2,\n      selection3,\n      selection4,\n      activeName,\n      combinedTabsConfig,\n      forms,\n      build\n    };\n  },\n  methods: {\n    build() {\n      this.$router.push('/LabTools/Sensor/Aotu_Config');\n    },\n    Back() {\n      this.$router.push('/LabTools/Sensor/Sensor_Config');\n    }\n  }\n};","map":{"version":3,"names":["computed","useStore","configData","reactive","setup","store","selection1","state","selections","selection2","selection3","selection4","activeName","activeTab","combinedTabsConfig","forms","forEach","tab","label","formItems","item","model","build","console","log","$router","push","methods","Back"],"sources":["/root/webserve/AI-Web/ai-web/front/src/components/LabTools/Sensor/Env_Config.vue"],"sourcesContent":["<template>\n  <div style=\"display: flex; width: 100%; justify-content: center;\">\n    <el-steps :active=\"1\" finish-status=\"success\" simple style=\"width: 70%; margin-top: 5px;\">\n      <el-step title=\"Test Case Overview\"></el-step>\n      <el-step title=\"Environment Configuration\"></el-step>\n      <el-step title=\"Aotumation Configuration\"></el-step>\n    </el-steps>\n  </div>\n  \n  <div class=\"search-form\">\n    <div class=\"row\">\n      <div class=\"input-group\">\n        <label for=\"selection1\">Platform:</label>\n        <input id=\"selection1\" :value=\"selection1\" readonly>\n      </div>\n  \n      <div class=\"input-group\">\n        <label for=\"selection2\">Test_Cycle_Name:</label>\n        <input id=\"selection2\" :value=\"selection2\" readonly>\n      </div>\n  \n      <div class=\"input-group\">\n        <label for=\"selection3\">Cycle_Config:</label>\n        <input id=\"selection3\" :value=\"selection3\" readonly>\n      </div>\n  \n      <div class=\"input-group\">\n        <label for=\"selection4\">Test_Domain:</label>\n        <el-select v-model=\"selection4\" multiple placeholder=\"请选择\" disabled>\n          <el-option\n            v-for=\"item in options\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"tabs-container\">\n    <el-tabs v-model=\"activeName\" type=\"card\">\n      <el-tab-pane\n        v-for=\"tab in combinedTabsConfig\"\n        :key=\"tab.label\"\n        :label=\"tab.label\"\n        :name=\"tab.label\"\n      >\n        <el-form label-position=\"top\">\n          <el-form-item\n            v-for=\"item in tab.formItems\"\n            :key=\"item.model\"\n            :label=\"item.label\"\n          >\n            <el-input\n              :type=\"item.type\"\n              v-model=\"forms[tab.label][item.model]\"\n            />\n          </el-form-item>\n        </el-form>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n  \n  <div class=\"buttons-container\" style=\"display: flex; justify-content: flex-start; align-items: flex-end; position: absolute; bottom: 70; right: 0; margin: 0px;\">\n  <div class=\"button-container\">\n    <button @click=\"Back\">Back</button>\n  </div>\n  <div class=\"button-container\">\n    <button @click=\"build\">Build</button>\n  </div>\n</div>\n  </template>\n  \n  \n  <script>\n  \n  import { computed } from 'vue';\n  import { useStore } from 'vuex';\n  import configData from '@/assets/config.json';\n  import { reactive } from 'vue';\n  \n  \n  \n  export default {\n    setup() {\n      const store = useStore();\n  \n      // 使用 computed 来创建只读的计算属性，它们将从 Vuex store 中获取状态\n      const selection1 = computed(() => store.state.selections.selection1);\n      const selection2 = computed(() => store.state.selections.selection2);\n      const selection3 = computed(() => store.state.selections.selection3);\n      const selection4 = computed(() => store.state.selections.selection4);\n      const activeName = computed(() => store.state.activeTab); // 假设 activeTab 保存在 Vuex store 的状态中\n      const combinedTabsConfig = computed(() => configData); // 异步读取配置文件\n      const forms = reactive({}); // 为每个tab和formItem创建响应式属性\n  \n      // 初始化forms对象\n      configData.forEach((tab) => {\n        forms[tab.label] = {};\n        tab.formItems.forEach((item) => {\n          forms[tab.label][item.model] = '';\n        });\n      });\n  \n      // 定义build方法\n      const build = () => {\n        // 这里应该是你的构建逻辑\n        console.log('Build function called');\n        this.$router.push('/LabTools/Sensor/Aotu_Config');\n      };\n  \n  \n  \n      // 返回响应式引用和函数...\n      return {\n        selection1,\n        selection2,\n        selection3,\n        selection4,\n        activeName,\n        combinedTabsConfig,\n        forms,\n        build,\n      };\n    },\n    methods: {\n      \n      build() {\n        this.$router.push('/LabTools/Sensor/Aotu_Config');\n      },\n      Back() {\n        this.$router.push('/LabTools/Sensor/Sensor_Config');\n    },\n    },\n  };\n  \n  \n  </script>\n  \n  \n  <style>\n  .buttons-container {\n  display: flex;\n  justify-content: space-between; /* 或者其他你想要的对齐方式 */\n}\n  .tabs-container {\n    max-width: 600px; /* 最大宽度，宽度可以根据内容自动调整 */\n    min-height: 400px; /* 最小高度，高度可以根据内容自动调整 */\n    margin: 20px auto; /* 上下边距和自动左右边距 */\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\n    border-radius: 4px; /* 圆角边框 */\n    border-color: #000000;\n    background-color: #00000010; /* 设置背景颜色为浅灰色 */\n    padding: 20px; /* 内边距 */\n    font-size: 1em; /* 字体大小 */\n    font-family: sans-serif; /* 字体家族 */\n    color: #000000; /* 字体颜色设置为黑色 */\n    font-weight: bold; /* 字体加粗 */\n    \n  }\n  \n  /* 选中的选项卡样式 */\n  .tabs-container .el-tabs__item.is-active {\n    background-color: #409EFF; /* 蓝色背景 */\n    color: white; /* 白色文字 */\n    font-family: sans-serif; /* 字体家族 */\n    color: #000000; /* 字体颜色设置为黑色 */\n    font-weight: bold; /* 字体加粗 */\n  }\n  \n  /* 未选中的选项卡样式 */\n  .tabs-container .el-tabs__item {\n    background-color: white; /* 白色背景 */\n    color: #606266; /* 文字颜色 */\n    border-color: #dcdfe6; /* 边框颜色 */\n    font-family: sans-serif; /* 字体家族 */\n    color: #000000; /* 字体颜色设置为黑色 */\n    font-weight: bold; /* 字体加粗 */\n  }\n  \n  .el-form-item {\n    margin-bottom: 20px; /* 增加表单项之间的间距 */\n    \n  }\n  \n  .el-input {\n    width: 100%; /* 输入框宽度设置为100% */\n    \n  }\n  \n  .button-container {\n    display: flex;\n    justify-content: flex-end; /* 将按钮对齐到右边 */\n    margin-right: 85px; /* 右边距20px */\n  }\n  \n  .button-container button {\n    margin-top: 1%;\n    padding: 10px 35px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n    font-weight: bold;\n    transition: background-color 0.3s ease;\n  }\n  \n  .button-container button:hover {\n    background-color: #0056b3;\n  }\n  </style>\n  \n  \n  <style scoped>\n  \n  .search-form {\n    max-width: 90%;\n    margin: 10px auto;\n    padding: 10px;\n    border: 3px solid #f7f6f6;\n    border-radius: 10px;\n    background: #ffffff;\n    \n  }\n  \n  .row {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 5px;\n  }\n  \n  .input-group {\n    display: flex;\n    flex-direction: column;\n    margin: 0 20px;\n    width: calc(50% - 20px); /* 减去间距的一半 */\n    \n  }\n  \n  .input-group label {\n    margin-bottom: 10px;\n    font-weight: bold;\n  \n  }\n  \n  .input-group input{\n    padding: 0px;\n    border: 2px solid #e6e6e6;\n    border-radius: 4px;\n    width: 100%; /* 选择框宽度调整为100% */\n    font: 1em sans-serif;\n    height: 33px;\n    background: #c9c8c8;\n    \n  }\n  \n  .button-row {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 20px; /* 增加按钮与上方元素的间距 */\n  }\n  \n  .row button {\n    margin-top:1% ;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 15px;\n    font-weight: bold;\n    transition: background-color 0.3s ease;\n  }\n  \n  .row button:hover {\n    background-color: #0056b3;\n  }\n  \n  \n  \n  </style>\n  \n  \n  "],"mappings":";AA6EE,SAASA,QAAO,QAAS,KAAK;AAC9B,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,UAAS,MAAO,sBAAsB;AAC7C,SAASC,QAAO,QAAS,KAAK;AAI9B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAMK,UAAS,GAAIN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,UAAU,CAACF,UAAU,CAAC;IACpE,MAAMG,UAAS,GAAIT,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,UAAU,CAACC,UAAU,CAAC;IACpE,MAAMC,UAAS,GAAIV,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,UAAU,CAACE,UAAU,CAAC;IACpE,MAAMC,UAAS,GAAIX,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,UAAU,CAACG,UAAU,CAAC;IACpE,MAAMC,UAAS,GAAIZ,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACM,SAAS,CAAC,EAAE;IAC1D,MAAMC,kBAAiB,GAAId,QAAQ,CAAC,MAAME,UAAU,CAAC,EAAE;IACvD,MAAMa,KAAI,GAAIZ,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;;IAE5B;IACAD,UAAU,CAACc,OAAO,CAAEC,GAAG,IAAK;MAC1BF,KAAK,CAACE,GAAG,CAACC,KAAK,IAAI,CAAC,CAAC;MACrBD,GAAG,CAACE,SAAS,CAACH,OAAO,CAAEI,IAAI,IAAK;QAC9BL,KAAK,CAACE,GAAG,CAACC,KAAK,CAAC,CAACE,IAAI,CAACC,KAAK,IAAI,EAAE;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,KAAI,GAAIA,CAAA,KAAM;MAClB;MACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAC;IACnD,CAAC;;IAID;IACA,OAAO;MACLpB,UAAU;MACVG,UAAU;MACVC,UAAU;MACVC,UAAU;MACVC,UAAU;MACVE,kBAAkB;MAClBC,KAAK;MACLO;IACF,CAAC;EACH,CAAC;EACDK,OAAO,EAAE;IAEPL,KAAKA,CAAA,EAAG;MACN,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAC;IACnD,CAAC;IACDE,IAAIA,CAAA,EAAG;MACL,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,gCAAgC,CAAC;IACvD;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}