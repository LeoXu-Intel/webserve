{"ast":null,"code":"// store.js\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    isAuthenticated: false,\n    selections: {\n      selection1: '',\n      selection2: '',\n      selection3: '',\n      selection4: []\n    }\n  },\n  getters: {},\n  mutations: {\n    setAuthentication(state, value) {\n      state.isAuthenticated = value;\n    },\n    setSelections(state, payload) {\n      state.selections = payload;\n    }\n  },\n  actions: {\n    saveSelections({\n      commit\n    }, selections) {\n      commit('setSelections', selections);\n      localStorage.setItem('selections', JSON.stringify(selections));\n    },\n    loadSelections({\n      commit\n    }) {\n      const selections = JSON.parse(localStorage.getItem('selections'));\n      if (selections) {\n        commit('setSelections', selections);\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","isAuthenticated","selections","selection1","selection2","selection3","selection4","getters","mutations","setAuthentication","value","setSelections","payload","actions","saveSelections","commit","localStorage","setItem","JSON","stringify","loadSelections","parse","getItem","modules"],"sources":["C:/Users/axu/OneDrive - Intel Corporation/Desktop/Web serve/webserve-0320/webserve/front/src/store/index.js"],"sourcesContent":["// store.js\r\nimport { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state: {\r\n    isAuthenticated: false,\r\n    selections: {\r\n      selection1: '',\r\n      selection2: '',\r\n      selection3: '',\r\n      selection4: [],\r\n    },\r\n  },\r\n  getters: {\r\n  },\r\n  mutations: {\r\n    setAuthentication(state, value) {\r\n      state.isAuthenticated = value;\r\n    },\r\n    setSelections(state, payload) {\r\n      state.selections = payload;\r\n    },\r\n  },\r\n  actions: {\r\n    saveSelections({ commit }, selections) {\r\n      commit('setSelections', selections);\r\n      localStorage.setItem('selections', JSON.stringify(selections));\r\n    },\r\n    loadSelections({ commit }) {\r\n      const selections = JSON.parse(localStorage.getItem('selections'));\r\n      if (selections) {\r\n        commit('setSelections', selections);\r\n      }\r\n    },\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,eAAe,EAAE,KAAK;IACtBC,UAAU,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IACTC,iBAAiBA,CAACT,KAAK,EAAEU,KAAK,EAAE;MAC9BV,KAAK,CAACC,eAAe,GAAGS,KAAK;IAC/B,CAAC;IACDC,aAAaA,CAACX,KAAK,EAAEY,OAAO,EAAE;MAC5BZ,KAAK,CAACE,UAAU,GAAGU,OAAO;IAC5B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAC;MAAEC;IAAO,CAAC,EAAEb,UAAU,EAAE;MACrCa,MAAM,CAAC,eAAe,EAAEb,UAAU,CAAC;MACnCc,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACjB,UAAU,CAAC,CAAC;IAChE,CAAC;IACDkB,cAAcA,CAAC;MAAEL;IAAO,CAAC,EAAE;MACzB,MAAMb,UAAU,GAAGgB,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,YAAY,CAAC,CAAC;MACjE,IAAIpB,UAAU,EAAE;QACda,MAAM,CAAC,eAAe,EAAEb,UAAU,CAAC;MACrC;IACF;EACF,CAAC;EACDqB,OAAO,EAAE,CACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}