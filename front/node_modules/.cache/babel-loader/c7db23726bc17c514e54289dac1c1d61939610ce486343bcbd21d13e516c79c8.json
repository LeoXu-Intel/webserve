{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport configData from '@/assets/config.json';\nexport default {\n  setup() {\n    const store = useStore();\n\n    // 使用 computed 来创建只读的计算属性，它们将从 Vuex store 中获取状态\n    const selection1 = computed(() => store.state.selections.selection1);\n    const selection2 = computed(() => store.state.selections.selection2);\n    const selection3 = computed(() => store.state.selections.selection3);\n    const selection4 = computed(() => store.state.selections.selection4);\n    const activeName = computed(() => store.state.activeTab); // 假设 activeTab 保存在 Vuex store 的状态中\n    const combinedTabsConfig = computed(() => configData); // 异步读取配置文件\n    const forms = reactive({}); // 为每个tab和formItem创建响应式属性\n\n    // 初始化forms对象\n    configData.forEach(tab => {\n      forms[tab.label] = {};\n      tab.formItems.forEach(item => {\n        forms[tab.label][item.model] = '';\n      });\n    });\n\n    // 定义build方法\n    const build = () => {\n      // 这里应该是你的构建逻辑\n      console.log('Build function called');\n    };\n\n    // 返回响应式引用和函数...\n    return {\n      selection1,\n      selection2,\n      selection3,\n      selection4,\n      activeName,\n      combinedTabsConfig,\n      forms,\n      build\n    };\n  }\n};","map":{"version":3,"names":["computed","useStore","configData","setup","store","selection1","state","selections","selection2","selection3","selection4","activeName","activeTab","combinedTabsConfig","forms","reactive","forEach","tab","label","formItems","item","model","build","console","log"],"sources":["C:\\Users\\axu\\OneDrive - Intel Corporation\\Desktop\\Web serve\\webserve-0320\\webserve\\front\\src\\components\\LabTools\\Sensor\\Env_Config.vue"],"sourcesContent":["<template>\r\n<div style=\"display: flex; width: 100%; justify-content: center;\">\r\n  <el-steps :active=\"1\" finish-status=\"success\" simple style=\"width: 70%; margin-top: 5px;\">\r\n    <el-step title=\"Test Case Overview\"></el-step>\r\n    <el-step title=\"Environment Configuration\"></el-step>\r\n    <el-step title=\"Aotumation Configuration\"></el-step>\r\n  </el-steps>\r\n</div>\r\n\r\n<div class=\"search-form\">\r\n  <div class=\"row\">\r\n    <div class=\"input-group\">\r\n      <label for=\"selection1\">Platform:</label>\r\n      <input id=\"selection1\" :value=\"selection1\" readonly>\r\n    </div>\r\n\r\n    <div class=\"input-group\">\r\n      <label for=\"selection2\">Test_Cycle_Name:</label>\r\n      <input id=\"selection2\" :value=\"selection2\" readonly>\r\n    </div>\r\n\r\n    <div class=\"input-group\">\r\n      <label for=\"selection3\">Cycle_Config:</label>\r\n      <input id=\"selection3\" :value=\"selection3\" readonly>\r\n    </div>\r\n\r\n    <div class=\"input-group\">\r\n      <label for=\"selection4\">Test_Domain:</label>\r\n      <el-select v-model=\"selection4\" multiple placeholder=\"请选择\" disabled>\r\n        <el-option\r\n          v-for=\"item in options\"\r\n          :key=\"item.value\"\r\n          :label=\"item.label\"\r\n          :value=\"item.value\">\r\n        </el-option>\r\n      </el-select>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"tabs-container\">\r\n  <el-tabs v-model=\"activeName\" type=\"card\">\r\n    <el-tab-pane\r\n      v-for=\"tab in combinedTabsConfig\"\r\n      :key=\"tab.label\"\r\n      :label=\"tab.label\"\r\n      :name=\"tab.label\"\r\n    >\r\n      <el-form label-position=\"top\">\r\n        <el-form-item\r\n          v-for=\"item in tab.formItems\"\r\n          :key=\"item.model\"\r\n          :label=\"item.label\"\r\n        >\r\n          <el-input\r\n            :type=\"item.type\"\r\n            v-model=\"forms[tab.label][item.model]\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-tab-pane>\r\n  </el-tabs>\r\n</div>\r\n\r\n<div class=\"button-container\">\r\n  <button @click=\"build\">Build</button>\r\n</div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport { computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport configData from '@/assets/config.json';\r\n\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n\r\n    // 使用 computed 来创建只读的计算属性，它们将从 Vuex store 中获取状态\r\n    const selection1 = computed(() => store.state.selections.selection1);\r\n    const selection2 = computed(() => store.state.selections.selection2);\r\n    const selection3 = computed(() => store.state.selections.selection3);\r\n    const selection4 = computed(() => store.state.selections.selection4);\r\n    const activeName = computed(() => store.state.activeTab); // 假设 activeTab 保存在 Vuex store 的状态中\r\n    const combinedTabsConfig = computed(() => configData); // 异步读取配置文件\r\n    const forms = reactive({}); // 为每个tab和formItem创建响应式属性\r\n\r\n    // 初始化forms对象\r\n    configData.forEach((tab) => {\r\n      forms[tab.label] = {};\r\n      tab.formItems.forEach((item) => {\r\n        forms[tab.label][item.model] = '';\r\n      });\r\n    });\r\n\r\n    // 定义build方法\r\n    const build = () => {\r\n      // 这里应该是你的构建逻辑\r\n      console.log('Build function called');\r\n    };\r\n\r\n\r\n\r\n    // 返回响应式引用和函数...\r\n    return {\r\n      selection1,\r\n      selection2,\r\n      selection3,\r\n      selection4,\r\n      activeName,\r\n      combinedTabsConfig,\r\n      forms,\r\n      build,\r\n    };\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n.tabs-container {\r\n  max-width: 600px; /* 最大宽度，宽度可以根据内容自动调整 */\r\n  min-height: 400px; /* 最小高度，高度可以根据内容自动调整 */\r\n  margin: 20px auto; /* 上下边距和自动左右边距 */\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\r\n  border-radius: 4px; /* 圆角边框 */\r\n  border-color: #000000;\r\n  background-color: #00000010; /* 设置背景颜色为浅灰色 */\r\n  padding: 20px; /* 内边距 */\r\n  font-size: 1em; /* 字体大小 */\r\n  font-family: sans-serif; /* 字体家族 */\r\n  color: #000000; /* 字体颜色设置为黑色 */\r\n  font-weight: bold; /* 字体加粗 */\r\n  \r\n}\r\n\r\n/* 选中的选项卡样式 */\r\n.tabs-container .el-tabs__item.is-active {\r\n  background-color: #409EFF; /* 蓝色背景 */\r\n  color: white; /* 白色文字 */\r\n  font-family: sans-serif; /* 字体家族 */\r\n  color: #000000; /* 字体颜色设置为黑色 */\r\n  font-weight: bold; /* 字体加粗 */\r\n}\r\n\r\n/* 未选中的选项卡样式 */\r\n.tabs-container .el-tabs__item {\r\n  background-color: white; /* 白色背景 */\r\n  color: #606266; /* 文字颜色 */\r\n  border-color: #dcdfe6; /* 边框颜色 */\r\n  font-family: sans-serif; /* 字体家族 */\r\n  color: #000000; /* 字体颜色设置为黑色 */\r\n  font-weight: bold; /* 字体加粗 */\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 20px; /* 增加表单项之间的间距 */\r\n  \r\n}\r\n\r\n.el-input {\r\n  width: 100%; /* 输入框宽度设置为100% */\r\n  \r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  justify-content: flex-end; /* 将按钮对齐到右边 */\r\n  margin-right: 85px; /* 右边距20px */\r\n}\r\n\r\n.button-container button {\r\n  margin-top: 1%;\r\n  padding: 10px 35px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.button-container button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n\r\n\r\n<style scoped>\r\n\r\n.search-form {\r\n  max-width: 90%;\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n  border: 3px solid #f7f6f6;\r\n  border-radius: 10px;\r\n  background: #ffffff;\r\n  \r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 20px;\r\n  width: calc(50% - 20px); /* 减去间距的一半 */\r\n  \r\n}\r\n\r\n.input-group label {\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n\r\n}\r\n\r\n.input-group input{\r\n  padding: 0px;\r\n  border: 2px solid #e6e6e6;\r\n  border-radius: 4px;\r\n  width: 100%; /* 选择框宽度调整为100% */\r\n  font: 1em sans-serif;\r\n  height: 33px;\r\n  background: #c9c8c8;\r\n  \r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px; /* 增加按钮与上方元素的间距 */\r\n}\r\n\r\n.row button {\r\n  margin-top:1% ;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.row button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n\r\n\r\n</style>\r\n\r\n\r\n"],"mappings":"AAwEA,SAASA,QAAO,QAAS,KAAK;AAC9B,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,UAAS,MAAO,sBAAsB;AAG7C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAMI,UAAS,GAAIL,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACC,UAAU,CAACF,UAAU,CAAC;IACpE,MAAMG,UAAS,GAAIR,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACC,UAAU,CAACC,UAAU,CAAC;IACpE,MAAMC,UAAS,GAAIT,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACC,UAAU,CAACE,UAAU,CAAC;IACpE,MAAMC,UAAS,GAAIV,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACC,UAAU,CAACG,UAAU,CAAC;IACpE,MAAMC,UAAS,GAAIX,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACM,SAAS,CAAC,EAAE;IAC1D,MAAMC,kBAAiB,GAAIb,QAAQ,CAAC,MAAME,UAAU,CAAC,EAAE;IACvD,MAAMY,KAAI,GAAIC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;;IAE5B;IACAb,UAAU,CAACc,OAAO,CAAEC,GAAG,IAAK;MAC1BH,KAAK,CAACG,GAAG,CAACC,KAAK,IAAI,CAAC,CAAC;MACrBD,GAAG,CAACE,SAAS,CAACH,OAAO,CAAEI,IAAI,IAAK;QAC9BN,KAAK,CAACG,GAAG,CAACC,KAAK,CAAC,CAACE,IAAI,CAACC,KAAK,IAAI,EAAE;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,KAAI,GAAIA,CAAA,KAAM;MAClB;MACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC;;IAID;IACA,OAAO;MACLnB,UAAU;MACVG,UAAU;MACVC,UAAU;MACVC,UAAU;MACVC,UAAU;MACVE,kBAAkB;MAClBC,KAAK;MACLQ;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}